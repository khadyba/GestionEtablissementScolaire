{
    "sourceFile": ".history/app/Http/Controllers/PaymentController_20240922154504.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1732373940681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732373947711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,9 @@\n     \n        \n         \n     }\n+    \n     public function redirectToPayment()\n     {\n         $eleve = Eleves::where('user_id', auth()->id())->firstOrFail();\n     \n@@ -62,9 +63,8 @@\n         1,\n         30000, \n         30000 \n     );\n-\n     $co->setTotalAmount(30000); \n \n     // Créer la facture via PayDunya\n     if ($co->create()) {\n@@ -82,8 +82,9 @@\n     } else {\n         return response()->json(['error' => $co->response_text], 500);\n     }\n     }\n+\n public function success()\n {\n     return view('payment.success');\n }\n"
                },
                {
                    "date": 1732373959242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,44 +46,44 @@\n     \n        \n         \n     }\n-    \n+\n     public function redirectToPayment()\n     {\n-        $eleve = Eleves::where('user_id', auth()->id())->firstOrFail();\n-    \n-    // Récupérer l'établissement associé à l'élève\n-    $etablissement = $eleve->user->etablissement; \n+            $eleve = Eleves::where('user_id', auth()->id())->firstOrFail();\n+        \n+        // Récupérer l'établissement associé à l'élève\n+        $etablissement = $eleve->user->etablissement; \n \n-    $co = new CheckoutInvoice();\n-    // Ajouter les détails de l'article à l'invoice\n-    $co->addItem(\n-        \"Frais de scolarité pour \" . $eleve->prenoms . \" \" . $eleve->nom,\n-        \"Frais de scolarité pour l'établissement \" . $etablissement->nom,\n-        1,\n-        30000, \n-        30000 \n-    );\n-    $co->setTotalAmount(30000); \n+        $co = new CheckoutInvoice();\n+        // Ajouter les détails de l'article à l'invoice\n+        $co->addItem(\n+            \"Frais de scolarité pour \" . $eleve->prenoms . \" \" . $eleve->nom,\n+            \"Frais de scolarité pour l'établissement \" . $etablissement->nom,\n+            1,\n+            30000, \n+            30000 \n+        );\n+        $co->setTotalAmount(30000); \n \n-    // Créer la facture via PayDunya\n-    if ($co->create()) {\n-        Payment::create([\n-            'montant' => 30000, \n-            'statut' => 1, \n-            'date' => now(),\n-            'eleve_id' => $eleve->id\n-        ]);\n+        // Créer la facture via PayDunya\n+        if ($co->create()) {\n+            Payment::create([\n+                'montant' => 30000, \n+                'statut' => 1, \n+                'date' => now(),\n+                'eleve_id' => $eleve->id\n+            ]);\n \n-        if (!empty($eleve->email_tuteur)) {\n-            Mail::to($eleve->email_tuteur)->send(new \\App\\Mail\\PaymentReceived($eleve, 30000, $etablissement));\n+            if (!empty($eleve->email_tuteur)) {\n+                Mail::to($eleve->email_tuteur)->send(new \\App\\Mail\\PaymentReceived($eleve, 30000, $etablissement));\n+            }\n+            return redirect($co->getInvoiceUrl());\n+        } else {\n+            return response()->json(['error' => $co->response_text], 500);\n         }\n-        return redirect($co->getInvoiceUrl());\n-    } else {\n-        return response()->json(['error' => $co->response_text], 500);\n     }\n-    }\n \n public function success()\n {\n     return view('payment.success');\n"
                },
                {
                    "date": 1732373965738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,10 +48,12 @@\n         \n     }\n \n     public function redirectToPayment()\n+    \n     {\n-            $eleve = Eleves::where('user_id', auth()->id())->firstOrFail();\n+  \n+        $eleve = Eleves::where('user_id', auth()->id())->firstOrFail();\n         \n         // Récupérer l'établissement associé à l'élève\n         $etablissement = $eleve->user->etablissement; \n \n"
                }
            ],
            "date": 1732373940681,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Classe;\nuse App\\Models\\Eleves;\nuse App\\Models\\Payment;\nuse Illuminate\\Http\\Request;\n\nuse App\\Mail\\PaymentReceived;\n\nuse Illuminate\\Support\\Facades\\Mail;\nuse Paydunya\\Setup as PaydunyaSetup;\nuse Paydunya\\Checkout\\CheckoutInvoice;\nuse Paydunya\\Checkout\\Store as PaydunyaStore;\n\nclass PaymentController extends Controller\n{\n\n    protected $payDunyaService;\n\n   \n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index()\n    {\n        //\n    }\n    public function __construct()\n    {\n        PaydunyaSetup::setMasterKey(config('paydunya.master_key'));\n        PaydunyaSetup::setPublicKey(config('paydunya.public_key'));\n        PaydunyaSetup::setPrivateKey(config('paydunya.private_key'));\n        PaydunyaSetup::setMode(config('paydunya.mode'));\n        PaydunyaSetup::setToken(config('paydunya.token'));\n\n        // Configurer les informations de la boutique\n        PaydunyaStore::setName(\"SunuLycee\"); // Seul le nom est requis\n        PaydunyaStore::setTagline(\"Payer n'importe ou n'importe comment!\");\n        PaydunyaStore::setPhoneNumber(\"773611172\");\n        PaydunyaStore::setPostalAddress(\"Dakar, Sénégal\");\n        PaydunyaStore::setWebsiteUrl(\"http://127.0.0.1:8000\");\n    \n       \n        \n    }\n    public function redirectToPayment()\n    {\n        $eleve = Eleves::where('user_id', auth()->id())->firstOrFail();\n    \n    // Récupérer l'établissement associé à l'élève\n    $etablissement = $eleve->user->etablissement; \n\n    $co = new CheckoutInvoice();\n    // Ajouter les détails de l'article à l'invoice\n    $co->addItem(\n        \"Frais de scolarité pour \" . $eleve->prenoms . \" \" . $eleve->nom,\n        \"Frais de scolarité pour l'établissement \" . $etablissement->nom,\n        1,\n        30000, \n        30000 \n    );\n\n    $co->setTotalAmount(30000); \n\n    // Créer la facture via PayDunya\n    if ($co->create()) {\n        Payment::create([\n            'montant' => 30000, \n            'statut' => 1, \n            'date' => now(),\n            'eleve_id' => $eleve->id\n        ]);\n\n        if (!empty($eleve->email_tuteur)) {\n            Mail::to($eleve->email_tuteur)->send(new \\App\\Mail\\PaymentReceived($eleve, 30000, $etablissement));\n        }\n        return redirect($co->getInvoiceUrl());\n    } else {\n        return response()->json(['error' => $co->response_text], 500);\n    }\n    }\npublic function success()\n{\n    return view('payment.success');\n}\npublic function cancel()\n{\n    $classes = Classe::all();\n    return view('Eleves.elevesdashboard', compact('classes'));\n}\npublic function callback(Request $request)\n{\n     if ($request->isMethod('post')) {\n        $data = $request->all();\n\n        if ($data['status'] == 'completed') {\n            $eleve = Eleves::where('user_id', auth()->id())->firstOrFail();\n            Payment::create([\n                'montant' => $data['total_amount'],\n                'date' => now(),\n                'status' => $data['status'],\n                'eleves_id' => $eleve->id\n            ]);\n\n            return response()->json(['status' => 'success'], 200);\n        } else {\n            return response()->json(['status' => 'failure', 'message' => 'Payment not completed'], 400);\n        }\n    } else {\n        return response()->json(['error' => 'Method not allowed'], 405);\n    }\n}\n    /**\n     * Show the form for creating a new resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create()\n    {\n        //\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        //\n    }\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  \\App\\Models\\Payment  $payment\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Payment $payment)\n    {\n        //\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     *\n     * @param  \\App\\Models\\Payment  $payment\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(Payment $payment)\n    {\n        //\n    }\n\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\App\\Models\\Payment  $payment\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, Payment $payment)\n    {\n        //\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param  \\App\\Models\\Payment  $payment\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Payment $payment)\n    {\n        //\n    }\n}\n"
        }
    ]
}