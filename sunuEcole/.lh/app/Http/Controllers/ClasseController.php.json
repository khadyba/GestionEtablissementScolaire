{
    "sourceFile": "app/Http/Controllers/ClasseController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 203,
            "patches": [
                {
                    "date": 1731319650381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731319672355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,16 +74,16 @@\n      *\n      * @param  \\App\\Models\\Classe  $classe\n      * @return \\Illuminate\\Http\\Response\n      */\n-    public function show($id)\n-    {\n-        $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n-        $eleve = Eleves::whereNull('classe_id')->get();\n-        \n-        $professeursAssignes = $classe->professeurs;\n-        return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n-    }\n+    // public function show($id)\n+    // {\n+    //     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n+    //     $eleve = Eleves::whereNull('classe_id')->get();\n+\n+    //     $professeursAssignes = $classe->professeurs;\n+    //     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n+    // }\n     /**\n      * Show the form for editing the specified resource.\n      *\n      * @param  \\App\\Models\\Classe  $classe\n"
                },
                {
                    "date": 1731319701052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,18 @@\n \n     //     $professeursAssignes = $classe->professeurs;\n     //     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n     // }\n+    public function show($id)\n+{\n+    $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n+    $this->authorize('view', $classe); // Vérifie l'autorisation\n+    $eleve = Eleves::whereNull('classe_id')->get();\n+    $professeursAssignes = $classe->professeurs;\n+\n+    return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n+}\n+\n     /**\n      * Show the form for editing the specified resource.\n      *\n      * @param  \\App\\Models\\Classe  $classe\n"
                },
                {
                    "date": 1731319733746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,8 +88,9 @@\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n+    \n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731319738872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-    \n+    dd()\n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731319745684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-    dd()\n+    dd($professeursAssignes)\n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731319767028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n     // }\n     public function show($id)\n {\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n-    $this->authorize('view', $classe); // Vérifie l'autorisation\n+    // $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n     dd($professeursAssignes)\n \n"
                },
                {
                    "date": 1731319794893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     // $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-    dd($professeursAssignes)\n+    dd($professeursAssignes);\n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731319873356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,13 @@\n class ClasseController extends Controller\n {\n \n \n-    public function __construct()\n-{\n-    $this->middleware('auth:admin');\n+//     public function __construct()\n+// {\n+//     $this->middleware('auth:admin');\n \n-}\n+// }\n     /**\n      * Display a listing of the resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n"
                },
                {
                    "date": 1731319908050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,13 @@\n class ClasseController extends Controller\n {\n \n \n-//     public function __construct()\n-// {\n-//     $this->middleware('auth:admin');\n+    public function __construct()\n+{\n+    $this->middleware('auth:admin');\n \n-// }\n+}\n     /**\n      * Display a listing of the resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n"
                },
                {
                    "date": 1731319918828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,13 +18,11 @@\n \n class ClasseController extends Controller\n {\n \n-\n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-\n }\n     /**\n      * Display a listing of the resource.\n      *\n"
                },
                {
                    "date": 1731319992654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n     // }\n     public function show($id)\n {\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n-    // $this->authorize('view', $classe); // Vérifie l'autorisation\n+    $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n     dd($professeursAssignes);\n \n"
                },
                {
                    "date": 1731320465530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,12 +83,12 @@\n     // }\n     public function show($id)\n {\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n-    $this->authorize('view', $classe); // Vérifie l'autorisation\n+    $this->authorize('view', $classe); \n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-    dd($professeursAssignes);\n+    // dd($professeursAssignes);\n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731320472961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,8 @@\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     $this->authorize('view', $classe); \n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-    // dd($professeursAssignes);\n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731320482388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,23 +72,15 @@\n      *\n      * @param  \\App\\Models\\Classe  $classe\n      * @return \\Illuminate\\Http\\Response\n      */\n-    // public function show($id)\n-    // {\n-    //     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n-    //     $eleve = Eleves::whereNull('classe_id')->get();\n-\n-    //     $professeursAssignes = $classe->professeurs;\n-    //     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n-    // }\n+  \n     public function show($id)\n {\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     $this->authorize('view', $classe); \n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-\n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n     /**\n"
                },
                {
                    "date": 1731320498723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,10 +64,8 @@\n     $validatedData['administrateur_id'] = auth('admin')->id();\n     Classe::create($validatedData);\n     return redirect()->route('classes.index')->with('success', 'Classe créée avec succès.');\n }\n-\n-\n     /**\n      * Display the specified resource.\n      *\n      * @param  \\App\\Models\\Classe  $classe\n"
                },
                {
                    "date": 1731320506936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n use App\\Models\\Classe;\n use App\\Models\\Eleves;\n use App\\Models\\Professeur;\n use Illuminate\\Http\\Request;\n-\n use App\\Models\\Etablissement;\n use App\\Mail\\EmploiDuTempsMail;\n use Illuminate\\Support\\Facades\\DB;\n use Illuminate\\Support\\Facades\\Auth;\n"
                },
                {
                    "date": 1731327499859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n <?php\n-\n namespace App\\Http\\Controllers;\n-\n use App\\Models\\Cours;\n use App\\Models\\Classe;\n use App\\Models\\Eleves;\n use App\\Models\\Professeur;\n@@ -20,8 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n+    \n }\n     /**\n      * Display a listing of the resource.\n      *\n"
                },
                {
                    "date": 1731327507378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    \n+    $this\n+\n }\n     /**\n      * Display a listing of the resource.\n      *\n"
                },
                {
                    "date": 1731327513284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this\n+    $this->au\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327519770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->au\n+    $this->is\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327531067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->is\n+    $this->isAuthorize()\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327537590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->isAuthorize()\n+    $this->isAuthorize();\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327543958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->isAuthorize();\n+    $this->isAuthorize(Cour::);\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327552469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->isAuthorize(Cour::);\n+    $this->isAuthorize(Cours::class);\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327603598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,8 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->isAuthorize(Cours::class);\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1732636469667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,8 +201,9 @@\n     }\n \n        // Envoyer l'email\n        Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n+       \n     return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n }\n \n \n"
                },
                {
                    "date": 1732636639168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,8 @@\n     }\n \n        // Envoyer l'email\n        Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n-       \n     return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n }\n \n \n"
                },
                {
                    "date": 1732637094457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,8 +201,10 @@\n     }\n \n        // Envoyer l'email\n        Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n+\n+       \n     return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n }\n \n \n"
                },
                {
                    "date": 1732637105628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,12 +199,17 @@\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n     }\n \n-       // Envoyer l'email\n-       Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n+    if (filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n+        Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n+    } else {\n+        // Gérer les cas où l'email est invalide ou manquant\n+        return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);\n+    }\n+    \n \n-       \n+\n     return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n }\n \n \n"
                },
                {
                    "date": 1732637112368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,11 +203,9 @@\n     if (filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n         Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n     } else {\n         // Gérer les cas où l'email est invalide ou manquant\n-        return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);\n-    }\n-    \n+        return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);    \n \n \n     return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n }\n"
                },
                {
                    "date": 1732637387458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,9 @@\n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n     }\n-\n+  dd\n     if (filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n         Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n     } else {\n         // Gérer les cas où l'email est invalide ou manquant\n"
                },
                {
                    "date": 1732637398527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,14 +198,16 @@\n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n     }\n-  dd\n+  dd($eleve);\n     if (filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n         Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n     } else {\n         // Gérer les cas où l'email est invalide ou manquant\n-        return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);    \n+        return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);\n+    }\n+    \n \n \n     return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n }\n"
                },
                {
                    "date": 1732637444620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,11 +198,11 @@\n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n     }\n-  dd($eleve);\n     if (filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n         Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n+        dd($eleve);\n     } else {\n         // Gérer les cas où l'email est invalide ou manquant\n         return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);\n     }\n"
                },
                {
                    "date": 1732637455861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n         $classe->eleve()->save($eleve);\n     }\n     if (filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n         Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n-        dd($eleve);\n+        dd( Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve)));\n     } else {\n         // Gérer les cas où l'email est invalide ou manquant\n         return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);\n     }\n"
                },
                {
                    "date": 1732637468677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,10 +199,10 @@\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n     }\n     if (filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n+        dd( Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve)));\n         Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n-        dd( Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve)));\n     } else {\n         // Gérer les cas où l'email est invalide ou manquant\n         return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);\n     }\n"
                },
                {
                    "date": 1732637492426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n     }\n     if (filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n-        dd( Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve)));\n+        // dd( Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve)));\n         Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n     } else {\n         // Gérer les cas où l'email est invalide ou manquant\n         return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);\n"
                },
                {
                    "date": 1732637584926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,10 @@\n     $classe = Classe::findOrFail($id);\n     $eleves = Eleves::all();\n     return view('Administrateur.assign-eleves', compact('classe', 'eleves'));\n }\n-public function storeAssignedStudents(Request $request, $id)\n+p\n+ublic function storeAssignedStudents(Request $request, $id)\n {\n     $classe = Classe::findOrFail($id);\n     $validatedData = $request->validate([\n         'eleve_ids' => 'required|array',\n"
                },
                {
                    "date": 1732637591635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,33 +186,32 @@\n     $classe = Classe::findOrFail($id);\n     $eleves = Eleves::all();\n     return view('Administrateur.assign-eleves', compact('classe', 'eleves'));\n }\n-p\n-ublic function storeAssignedStudents(Request $request, $id)\n-{\n-    $classe = Classe::findOrFail($id);\n-    $validatedData = $request->validate([\n-        'eleve_ids' => 'required|array',\n-        'eleve_ids.*' => 'exists:eleves,id', \n-    ]);\n+// public function storeAssignedStudents(Request $request, $id)\n+// {\n+//     $classe = Classe::findOrFail($id);\n+//     $validatedData = $request->validate([\n+//         'eleve_ids' => 'required|array',\n+//         'eleve_ids.*' => 'exists:eleves,id', \n+//     ]);\n     \n-    foreach ($validatedData['eleve_ids'] as $eleveId) {\n-        $eleve = Eleves::findOrFail($eleveId);\n-        $classe->eleve()->save($eleve);\n-    }\n-    if (filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n-        // dd( Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve)));\n-        Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n-    } else {\n-        // Gérer les cas où l'email est invalide ou manquant\n-        return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);\n-    }\n+//     foreach ($validatedData['eleve_ids'] as $eleveId) {\n+//         $eleve = Eleves::findOrFail($eleveId);\n+//         $classe->eleve()->save($eleve);\n+//     }\n+//     if (filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n+//         // dd( Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve)));\n+//         Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n+//     } else {\n+//         // Gérer les cas où l'email est invalide ou manquant\n+//         return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);\n+//     }\n     \n \n \n-    return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n-}\n+//     return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n+// }\n \n \n public function detachProfesseurFromClasse($classeId, $professeurId)\n {\n"
                },
                {
                    "date": 1732637750754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n use Illuminate\\Support\\Facades\\Auth;\n use Illuminate\\Support\\Facades\\Mail;\n use App\\Mail\\ProfessorAssignedNotification;\n use App\\Mail\\ProfessorDetachedNotification;\n+use Illuminate\\Support\\Facades\\Log; // Import de Log\n \n class ClasseController extends Controller\n {\n \n@@ -212,8 +213,36 @@\n //     return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n // }\n \n \n+public function storeAssignedStudents(Request $request, $id)\n+{\n+    $classe = Classe::findOrFail($id);\n+    $validatedData = $request->validate([\n+        'eleve_ids' => 'required|array',\n+        'eleve_ids.*' => 'exists:eleves,id', \n+    ]);\n+\n+    foreach ($validatedData['eleve_ids'] as $eleveId) {\n+        $eleve = Eleves::findOrFail($eleveId);\n+        $classe->eleve()->save($eleve);\n+\n+        // Vérifier et envoyer l'email\n+        if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n+            try {\n+                Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n+            } catch (\\Exception $e) {\n+                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève ID ' . $eleve->id . ' : ' . $e->getMessage());\n+            }\n+        } else {\n+            Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n+        }\n+    }\n+\n+    return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n+}\n+\n+\n public function detachProfesseurFromClasse($classeId, $professeurId)\n {\n     $classe = Classe::find($classeId);\n     $professeur = Professeur::find($professeurId);\n"
                },
                {
                    "date": 1732638292772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,11 @@\n             Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n         }\n     }\n \n-    return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n+    return redirect()->route('classes.index', $classe->id)\n+    ->with('success', 'Élèves assignés avec succès à la classe.');\n+\n }\n \n \n public function detachProfesseurFromClasse($classeId, $professeurId)\n"
                },
                {
                    "date": 1732638449707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,10 +238,12 @@\n         }\n     }\n \n     return redirect()->route('classes.index', $classe->id)\n-    ->with('success', 'Élèves assignés avec succès à la classe.');\n+    ->with('success', 'Élèves assignés avec succès à la classe.')\n+    ->with('debug', session('success'));\n \n+\n }\n \n \n public function detachProfesseurFromClasse($classeId, $professeurId)\n"
                },
                {
                    "date": 1732638518409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,12 +238,10 @@\n         }\n     }\n \n     return redirect()->route('classes.index', $classe->id)\n-    ->with('success', 'Élèves assignés avec succès à la classe.')\n-    ->with('debug', session('success'));\n+    ->with('success', 'Élèves assignés avec succès à la classe.');\n \n-\n }\n \n \n public function detachProfesseurFromClasse($classeId, $professeurId)\n"
                },
                {
                    "date": 1732638545598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,9 @@\n             Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n         }\n     }\n \n-    return redirect()->route('classes.index', $classe->id)\n+    return redirect()->route('admin.dashboard', $classe->id)\n     ->with('success', 'Élèves assignés avec succès à la classe.');\n \n }\n \n"
                },
                {
                    "date": 1732638584153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,9 @@\n             Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n         }\n     }\n \n-    return redirect()->route('admin.dashboard', $classe->id)\n+    return redirect()->route('classes.index', $classe->id)\n     ->with('success', 'Élèves assignés avec succès à la classe.');\n \n }\n \n"
                },
                {
                    "date": 1732638750343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,8 @@\n             // Gérer le cas où le professeur n'a pas d'email\n             return redirect()->route('classes.index')->with('error', 'Le professeur n\\'a pas d\\'email.');\n         }\n \n-\n     return redirect()->route('classes.index')->with('success', 'Professeurs assignés avec succès à la classe.');\n }\n \n \n"
                },
                {
                    "date": 1732638894231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,8 @@\n         'professeur_ids.*' => 'exists:professeurs,id',\n     ]);\n \n     $classe = Classe::findOrFail($id);\n-     // Récupérer le nom de l'établissement associé à la classe\n      $etablissementName = $classe->etablissement->nom;\n     // Attacher les professeurs à la classe\n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n         DB::table('classe_professeur')->insert([\n"
                },
                {
                    "date": 1732638899641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,12 +153,10 @@\n     $validatedData = $request->validate([\n         'professeur_ids' => 'required|array',\n         'professeur_ids.*' => 'exists:professeurs,id',\n     ]);\n-\n     $classe = Classe::findOrFail($id);\n      $etablissementName = $classe->etablissement->nom;\n-    // Attacher les professeurs à la classe\n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n         DB::table('classe_professeur')->insert([\n             'classe_id' => $classe->id,\n             'professeur_id' => $professeurId,\n"
                },
                {
                    "date": 1732638907328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,8 @@\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n     }\n-\n     $professeur = Auth::user()->professeur;\n \n             if ($professeur && $professeur->email) {\n             Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n@@ -173,9 +172,9 @@\n             // Gérer le cas où le professeur n'a pas d'email\n             return redirect()->route('classes.index')->with('error', 'Le professeur n\\'a pas d\\'email.');\n         }\n \n-    return redirect()->route('classes.index')->with('success', 'Professeurs assignés avec succès à la classe.');\n+         return redirect()->route('classes.index')->with('success', 'Professeurs assignés avec succès à la classe.');\n }\n \n \n public function assignStudents($id)\n"
                },
                {
                    "date": 1732638921981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,13 +168,12 @@\n \n             if ($professeur && $professeur->email) {\n             Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n         } else {\n-            // Gérer le cas où le professeur n'a pas d'email\n             return redirect()->route('classes.index')->with('error', 'Le professeur n\\'a pas d\\'email.');\n         }\n \n-         return redirect()->route('classes.index')->with('success', 'Professeurs assignés avec succès à la classe.');\n+        return redirect()->route('classes.index')->with('success', 'Professeurs assignés avec succès à la classe.');\n }\n \n \n public function assignStudents($id)\n"
                },
                {
                    "date": 1732639069770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n \n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n-\n+dd\n         // Vérifier et envoyer l'email\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n"
                },
                {
                    "date": 1732639081930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n \n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n-dd\n+dd(email_tuteur);\n         // Vérifier et envoyer l'email\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n"
                },
                {
                    "date": 1732639092796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n \n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n-dd(email_tuteur);\n+dd($eleve->email_tuteur);\n         // Vérifier et envoyer l'email\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n"
                },
                {
                    "date": 1732639164672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n \n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n-dd($eleve->email_tuteur);\n+dd($eleve->email_tuteur.en);\n         // Vérifier et envoyer l'email\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n"
                },
                {
                    "date": 1732639310250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,34 +147,34 @@\n     $professeurs = Professeur::all();\n     return view('Administrateur.assign-professeurs', compact('classe', 'professeurs'));\n }\n \n-public function storeAssignedTeacher(Request $request, $id)\n-{\n-    $validatedData = $request->validate([\n-        'professeur_ids' => 'required|array',\n-        'professeur_ids.*' => 'exists:professeurs,id',\n-    ]);\n-    $classe = Classe::findOrFail($id);\n-     $etablissementName = $classe->etablissement->nom;\n-    foreach ($validatedData['professeur_ids'] as $professeurId) {\n-        DB::table('classe_professeur')->insert([\n-            'classe_id' => $classe->id,\n-            'professeur_id' => $professeurId,\n-            'created_at' => now(),\n-            'updated_at' => now(),\n-        ]);\n-    }\n-    $professeur = Auth::user()->professeur;\n+// public function storeAssignedTeacher(Request $request, $id)\n+// {\n+//     $validatedData = $request->validate([\n+//         'professeur_ids' => 'required|array',\n+//         'professeur_ids.*' => 'exists:professeurs,id',\n+//     ]);\n+//     $classe = Classe::findOrFail($id);\n+//      $etablissementName = $classe->etablissement->nom;\n+//     foreach ($validatedData['professeur_ids'] as $professeurId) {\n+//         DB::table('classe_professeur')->insert([\n+//             'classe_id' => $classe->id,\n+//             'professeur_id' => $professeurId,\n+//             'created_at' => now(),\n+//             'updated_at' => now(),\n+//         ]);\n+//     }\n+//     $professeur = Auth::user()->professeur;\n \n-            if ($professeur && $professeur->email) {\n-            Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n-        } else {\n-            return redirect()->route('classes.index')->with('error', 'Le professeur n\\'a pas d\\'email.');\n-        }\n+//             if ($professeur && $professeur->email) {\n+//             Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n+//         } else {\n+//             return redirect()->route('classes.index')->with('error', 'Le professeur n\\'a pas d\\'email.');\n+//         }\n \n-        return redirect()->route('classes.index')->with('success', 'Professeurs assignés avec succès à la classe.');\n-}\n+//         return redirect()->route('classes.index')->with('success', 'Professeurs assignés avec succès à la classe.');\n+// }\n \n \n public function assignStudents($id)\n {\n@@ -218,9 +218,9 @@\n \n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n-dd($eleve->email_tuteur.en);\n+dd($eleve->email_tuteur);\n         // Vérifier et envoyer l'email\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n"
                },
                {
                    "date": 1732698882583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,10 +173,61 @@\n //         }\n \n //         return redirect()->route('classes.index')->with('success', 'Professeurs assignés avec succès à la classe.');\n // }\n+public function storeAssignedTeacher(Request $request, $id)\n+{\n+    $validatedData = $request->validate([\n+        'professeur_ids' => 'required|array',\n+        'professeur_ids.*' => 'exists:professeurs,id',\n+    ]);\n \n+    $classe = Classe::findOrFail($id);\n+    $errors = []; // Pour collecter les messages d'erreur\n+    $success = []; // Pour collecter les messages de succès\n \n+    foreach ($validatedData['professeur_ids'] as $professeurId) {\n+        // Vérifiez si le professeur est déjà affecté à une classe\n+        $professeurAffectation = DB::table('classe_professeur')\n+            ->where('professeur_id', $professeurId)\n+            ->first();\n+\n+        if ($professeurAffectation) {\n+            if ($professeurAffectation->classe_id == $classe->id) {\n+                // Professeur déjà affecté à cette classe\n+                $errors[] = \"Le professeur ID {$professeurId} est déjà affecté à cette classe.\";\n+            } else {\n+                // Professeur affecté à une autre classe\n+                $errors[] = \"Le professeur ID {$professeurId} est déjà affecté à une autre classe (Classe ID {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n+            }\n+            continue; // Passer au prochain professeur\n+        }\n+\n+        // Si le professeur n'est pas affecté, l'ajouter à la classe actuelle\n+        DB::table('classe_professeur')->insert([\n+            'classe_id' => $classe->id,\n+            'professeur_id' => $professeurId,\n+            'created_at' => now(),\n+            'updated_at' => now(),\n+        ]);\n+\n+        $success[] = \"Le professeur ID {$professeurId} a été affecté avec succès à la classe.\";\n+    }\n+\n+    // Préparez les messages à afficher\n+    if (!empty($errors)) {\n+        session()->flash('error', implode('<br>', $errors));\n+    }\n+\n+    if (!empty($success)) {\n+        session()->flash('success', implode('<br>', $success));\n+    }\n+\n+    return redirect()->route('classes.index', $classe->id);\n+}\n+\n+\n+\n public function assignStudents($id)\n {\n     $classe = Classe::findOrFail($id);\n     $eleves = Eleves::all();\n"
                },
                {
                    "date": 1732698912716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,53 +181,44 @@\n         'professeur_ids.*' => 'exists:professeurs,id',\n     ]);\n \n     $classe = Classe::findOrFail($id);\n-    $errors = []; // Pour collecter les messages d'erreur\n-    $success = []; // Pour collecter les messages de succès\n+    $etablissementName = $classe->etablissement->nom;\n \n+    $errors = []; // Pour collecter les erreurs\n+\n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n-        // Vérifiez si le professeur est déjà affecté à une classe\n-        $professeurAffectation = DB::table('classe_professeur')\n-            ->where('professeur_id', $professeurId)\n-            ->first();\n-\n-        if ($professeurAffectation) {\n-            if ($professeurAffectation->classe_id == $classe->id) {\n-                // Professeur déjà affecté à cette classe\n-                $errors[] = \"Le professeur ID {$professeurId} est déjà affecté à cette classe.\";\n-            } else {\n-                // Professeur affecté à une autre classe\n-                $errors[] = \"Le professeur ID {$professeurId} est déjà affecté à une autre classe (Classe ID {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n-            }\n-            continue; // Passer au prochain professeur\n-        }\n-\n-        // Si le professeur n'est pas affecté, l'ajouter à la classe actuelle\n         DB::table('classe_professeur')->insert([\n             'classe_id' => $classe->id,\n             'professeur_id' => $professeurId,\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n+    }\n \n-        $success[] = \"Le professeur ID {$professeurId} a été affecté avec succès à la classe.\";\n+    $professeur = Auth::user()->professeur;\n+\n+    if ($professeur && $professeur->email) {\n+        try {\n+            Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n+        } catch (\\Exception $e) {\n+            $errors[] = \"Échec de l'envoi de l'email au professeur : {$professeur->email}.\";\n+        }\n+    } else {\n+        $errors[] = 'Le professeur connecté n\\'a pas d\\'email.';\n     }\n \n-    // Préparez les messages à afficher\n+    // Gestion des erreurs et redirection\n     if (!empty($errors)) {\n-        session()->flash('error', implode('<br>', $errors));\n+        return redirect()->route('classes.index', $classe->id)\n+            ->with('error', implode(' ', $errors));\n     }\n \n-    if (!empty($success)) {\n-        session()->flash('success', implode('<br>', $success));\n-    }\n-\n-    return redirect()->route('classes.index', $classe->id);\n+    return redirect()->route('classes.index', $classe->id)\n+        ->with('success', 'Professeurs assignés avec succès à la classe.');\n }\n \n \n-\n public function assignStudents($id)\n {\n     $classe = Classe::findOrFail($id);\n     $eleves = Eleves::all();\n"
                },
                {
                    "date": 1732699209307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,42 +183,66 @@\n \n     $classe = Classe::findOrFail($id);\n     $etablissementName = $classe->etablissement->nom;\n \n-    $errors = []; // Pour collecter les erreurs\n+    $errors = [];  // Pour collecter les messages d'erreur\n+    $success = []; // Pour collecter les messages de succès\n \n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n+        // Vérifiez si le professeur est déjà affecté à une classe\n+        $professeurAffectation = DB::table('classe_professeur')\n+            ->where('professeur_id', $professeurId)\n+            ->first();\n+\n+        if ($professeurAffectation) {\n+            if ($professeurAffectation->classe_id == $classe->id) {\n+                // Professeur déjà affecté à cette classe\n+                $errors[] = \"Le professeur ID {$professeurId} est déjà affecté à cette classe.\";\n+                continue; // Passer au prochain professeur\n+            } else {\n+                // Professeur affecté à une autre classe\n+                $errors[] = \"Le professeur ID {$professeurId} est déjà affecté à une autre classe (Classe ID {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n+                continue; // Passer au prochain professeur\n+            }\n+        }\n+\n+        // Si le professeur n'est pas affecté, l'ajouter à la classe actuelle\n         DB::table('classe_professeur')->insert([\n             'classe_id' => $classe->id,\n             'professeur_id' => $professeurId,\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n-    }\n \n-    $professeur = Auth::user()->professeur;\n+        $success[] = \"Le professeur ID {$professeurId} a été affecté avec succès à la classe.\";\n \n-    if ($professeur && $professeur->email) {\n-        try {\n-            Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n-        } catch (\\Exception $e) {\n-            $errors[] = \"Échec de l'envoi de l'email au professeur : {$professeur->email}.\";\n+        // Envoi de l'email\n+        $professeur = Professeur::find($professeurId);\n+        if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n+            try {\n+                Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n+            } catch (\\Exception $e) {\n+                $errors[] = \"Échec de l'envoi de l'email au professeur ID {$professeurId} ({$professeur->email}).\";\n+            }\n+        } else {\n+            $errors[] = \"Le professeur ID {$professeurId} n'a pas d'adresse email valide.\";\n         }\n-    } else {\n-        $errors[] = 'Le professeur connecté n\\'a pas d\\'email.';\n     }\n \n-    // Gestion des erreurs et redirection\n+    // Préparer les messages pour l'interface utilisateur\n     if (!empty($errors)) {\n-        return redirect()->route('classes.index', $classe->id)\n-            ->with('error', implode(' ', $errors));\n+        session()->flash('error', implode('<br>', $errors));\n     }\n \n-    return redirect()->route('classes.index', $classe->id)\n-        ->with('success', 'Professeurs assignés avec succès à la classe.');\n+    if (!empty($success)) {\n+        session()->flash('success', implode('<br>', $success));\n+    }\n+\n+    return redirect()->route('classes.index', $classe->id);\n }\n \n \n+\n public function assignStudents($id)\n {\n     $classe = Classe::findOrFail($id);\n     $eleves = Eleves::all();\n"
                },
                {
                    "date": 1732699328615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,9 +195,9 @@\n \n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 // Professeur déjà affecté à cette classe\n-                $errors[] = \"Le professeur ID {$professeurId} est déjà affecté à cette classe.\";\n+                $errors[] = \"Le professeur  {$professeurId} est déjà affecté à cette classe.\";\n                 continue; // Passer au prochain professeur\n             } else {\n                 // Professeur affecté à une autre classe\n                 $errors[] = \"Le professeur ID {$professeurId} est déjà affecté à une autre classe (Classe ID {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n"
                },
                {
                    "date": 1732699334359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,9 +195,9 @@\n \n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 // Professeur déjà affecté à cette classe\n-                $errors[] = \"Le professeur  {$professeurId} est déjà affecté à cette classe.\";\n+                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n                 continue; // Passer au prochain professeur\n             } else {\n                 // Professeur affecté à une autre classe\n                 $errors[] = \"Le professeur ID {$professeurId} est déjà affecté à une autre classe (Classe ID {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n"
                },
                {
                    "date": 1732699374316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n                 continue; // Passer au prochain professeur\n             } else {\n                 // Professeur affecté à une autre classe\n-                $errors[] = \"Le professeur ID {$professeurId} est déjà affecté à une autre classe (Classe ID {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n+                $errors[] = \"Le professeur  {$professeurId} est déjà affecté à une autre classe (Classe ID {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; // Passer au prochain professeur\n             }\n         }\n \n"
                },
                {
                    "date": 1732699380792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n                 continue; // Passer au prochain professeur\n             } else {\n                 // Professeur affecté à une autre classe\n-                $errors[] = \"Le professeur  {$professeurId} est déjà affecté à une autre classe (Classe ID {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n+                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe ID {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; // Passer au prochain professeur\n             }\n         }\n \n"
                },
                {
                    "date": 1732699389412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n                 continue; // Passer au prochain professeur\n             } else {\n                 // Professeur affecté à une autre classe\n-                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe ID {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n+                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe  {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; // Passer au prochain professeur\n             }\n         }\n \n"
                },
                {
                    "date": 1732699399143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n                 continue; // Passer au prochain professeur\n             } else {\n                 // Professeur affecté à une autre classe\n-                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe  {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n+                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numérique {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; // Passer au prochain professeur\n             }\n         }\n \n"
                },
                {
                    "date": 1732699409365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n                 continue; // Passer au prochain professeur\n             } else {\n                 // Professeur affecté à une autre classe\n-                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numérique {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n+                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; // Passer au prochain professeur\n             }\n         }\n \n"
                },
                {
                    "date": 1732699442926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n                 continue; // Passer au prochain professeur\n             } else {\n                 // Professeur affecté à une autre classe\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n-                continue; // Passer au prochain professeur\n+                continue;\n             }\n         }\n \n         // Si le professeur n'est pas affecté, l'ajouter à la classe actuelle\n"
                },
                {
                    "date": 1732699449828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,10 +203,8 @@\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n                 continue;\n             }\n         }\n-\n-        // Si le professeur n'est pas affecté, l'ajouter à la classe actuelle\n         DB::table('classe_professeur')->insert([\n             'classe_id' => $classe->id,\n             'professeur_id' => $professeurId,\n             'created_at' => now(),\n"
                },
                {
                    "date": 1732699456671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,10 +211,8 @@\n             'updated_at' => now(),\n         ]);\n \n         $success[] = \"Le professeur ID {$professeurId} a été affecté avec succès à la classe.\";\n-\n-        // Envoi de l'email\n         $professeur = Professeur::find($professeurId);\n         if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732699466360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,10 @@\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n                 continue; // Passer au prochain professeur\n             } else {\n                 // Professeur affecté à une autre classe\n-                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). Veuillez le désaffecter avant de le réaffecter.\";\n+                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n+                Veuillez le désaffecter avant de le réaffecter.\";\n                 continue;\n             }\n         }\n         DB::table('classe_professeur')->insert([\n"
                },
                {
                    "date": 1732699471868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,8 @@\n             ->first();\n \n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n-                // Professeur déjà affecté à cette classe\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n                 continue; // Passer au prochain professeur\n             } else {\n                 // Professeur affecté à une autre classe\n"
                },
                {
                    "date": 1732699479304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,11 +195,9 @@\n \n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n-                continue; // Passer au prochain professeur\n             } else {\n-                // Professeur affecté à une autre classe\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n                 continue;\n             }\n"
                },
                {
                    "date": 1732699486734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,8 @@\n     $errors = [];  // Pour collecter les messages d'erreur\n     $success = []; // Pour collecter les messages de succès\n \n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n-        // Vérifiez si le professeur est déjà affecté à une classe\n         $professeurAffectation = DB::table('classe_professeur')\n             ->where('professeur_id', $professeurId)\n             ->first();\n \n"
                },
                {
                    "date": 1732699491928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,8 @@\n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n         $professeurAffectation = DB::table('classe_professeur')\n             ->where('professeur_id', $professeurId)\n             ->first();\n-\n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n             } else {\n@@ -206,9 +205,8 @@\n             'professeur_id' => $professeurId,\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n-\n         $success[] = \"Le professeur ID {$professeurId} a été affecté avec succès à la classe.\";\n         $professeur = Professeur::find($professeurId);\n         if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n"
                },
                {
                    "date": 1732699499707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,8 @@\n             $errors[] = \"Le professeur ID {$professeurId} n'a pas d'adresse email valide.\";\n         }\n     }\n \n-    // Préparer les messages pour l'interface utilisateur\n     if (!empty($errors)) {\n         session()->flash('error', implode('<br>', $errors));\n     }\n \n"
                },
                {
                    "date": 1732699520268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,9 +205,9 @@\n             'professeur_id' => $professeurId,\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n-        $success[] = \"Le professeur ID {$professeurId} a été affecté avec succès à la classe.\";\n+        $success[] = \"Le professeur  {$professeurId} a été affecté avec succès à la classe.\";\n         $professeur = Professeur::find($professeurId);\n         if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732699535964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,15 +205,15 @@\n             'professeur_id' => $professeurId,\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n-        $success[] = \"Le professeur  {$professeurId} a été affecté avec succès à la classe.\";\n+        $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n         $professeur = Professeur::find($professeurId);\n         if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur ID {$professeurId} ({$professeur->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$professeurId} ({$professeur->email}).\";\n             }\n         } else {\n             $errors[] = \"Le professeur ID {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732699696641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,8 +207,9 @@\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n         $professeur = Professeur::find($professeurId);\n+        dd()\n         if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n"
                },
                {
                    "date": 1732699706041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n         $professeur = Professeur::find($professeurId);\n-        dd()\n+        dd( $professeur);\n         if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n"
                },
                {
                    "date": 1732699795531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,9 +206,9 @@\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n-        $professeur = Professeur::find($professeurId);\n+        $professeur = Professeur::find($professeurId)->;\n         dd( $professeur);\n         if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732699802759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,9 +206,9 @@\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n-        $professeur = Professeur::find($professeurId)->;\n+        $professeur = Professeur::find($professeurId)->professeur;\n         dd( $professeur);\n         if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732699817437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,9 +206,9 @@\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n-        $professeur = Professeur::find($professeurId)->professeur;\n+        $professeur = Professeur::find($professeurId)->professeurs;\n         dd( $professeur);\n         if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732699830651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,9 +206,9 @@\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n-        $professeur = Professeur::find($professeurId)->professeurs;\n+        $professeur = Professeur::find($professeurId);\n         dd( $professeur);\n         if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732700216098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,10 +206,10 @@\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n+        dd( $professeur);\n         $professeur = Professeur::find($professeurId);\n-        dd( $professeur);\n         if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n"
                },
                {
                    "date": 1732700225323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,19 +206,22 @@\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n+        // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n+        $professeur = Professeur::find($professeurId);\n+        $user = $professeur->user; // Relation avec la table `users`\n         dd( $professeur);\n-        $professeur = Professeur::find($professeurId);\n-        if ($professeur && filter_var($professeur->email, FILTER_VALIDATE_EMAIL)) {\n-            try {\n-                Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n-            } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$professeurId} ({$professeur->email}).\";\n-            }\n-        } else {\n-            $errors[] = \"Le professeur ID {$professeurId} n'a pas d'adresse email valide.\";\n-        }\n+\n+       if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n+           try {\n+               Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n+           } catch (\\Exception $e) {\n+               $errors[] = \"Échec de l'envoi de l'email au professeur ID {$professeurId} ({$user->email}).\";\n+           }\n+       } else {\n+           $errors[] = \"Le professeur ID {$professeurId} n'a pas d'adresse email valide.\";\n+       }\n     }\n \n     if (!empty($errors)) {\n         session()->flash('error', implode('<br>', $errors));\n"
                },
                {
                    "date": 1732700231710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,9 +209,9 @@\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n         // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n-        dd( $professeur);\n+        dd( $user);\n \n        if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n            try {\n                Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732700261504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,9 +209,9 @@\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n         // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n-        dd( $user);\n+        // dd( $user);\n \n        if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n            try {\n                Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732700332721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,9 +215,9 @@\n        if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n            try {\n                Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n            } catch (\\Exception $e) {\n-               $errors[] = \"Échec de l'envoi de l'email au professeur ID {$professeurId} ({$user->email}).\";\n+               $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$professeurId} ({$user->email}).\";\n            }\n        } else {\n            $errors[] = \"Le professeur ID {$professeurId} n'a pas d'adresse email valide.\";\n        }\n"
                },
                {
                    "date": 1732700741174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,43 +187,49 @@\n     $errors = [];  // Pour collecter les messages d'erreur\n     $success = []; // Pour collecter les messages de succès\n \n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n+        // Vérification si le professeur est déjà affecté à une classe\n         $professeurAffectation = DB::table('classe_professeur')\n             ->where('professeur_id', $professeurId)\n             ->first();\n+\n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n+                continue; // Passer au prochain professeur\n             } else {\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n-                continue;\n+                continue; // Passer au prochain professeur\n             }\n         }\n+\n+        // Si le professeur n'est pas affecté, on l'ajoute à la classe\n         DB::table('classe_professeur')->insert([\n             'classe_id' => $classe->id,\n             'professeur_id' => $professeurId,\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n+\n         // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n-        // dd( $user);\n \n-       if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n-           try {\n-               Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n-           } catch (\\Exception $e) {\n-               $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$professeurId} ({$user->email}).\";\n-           }\n-       } else {\n-           $errors[] = \"Le professeur ID {$professeurId} n'a pas d'adresse email valide.\";\n-       }\n+        if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n+            try {\n+                Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n+            } catch (\\Exception $e) {\n+                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$professeurId} ({$user->email}).\";\n+            }\n+        } else {\n+            $errors[] = \"Le professeur ID {$professeurId} n'a pas d'adresse email valide.\";\n+        }\n     }\n \n+    // Gestion des messages d'erreur et de succès\n     if (!empty($errors)) {\n         session()->flash('error', implode('<br>', $errors));\n     }\n \n@@ -235,8 +241,9 @@\n }\n \n \n \n+\n public function assignStudents($id)\n {\n     $classe = Classe::findOrFail($id);\n     $eleves = Eleves::all();\n"
                },
                {
                    "date": 1732700764978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,9 +223,9 @@\n             } catch (\\Exception $e) {\n                 $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$professeurId} ({$user->email}).\";\n             }\n         } else {\n-            $errors[] = \"Le professeur ID {$professeurId} n'a pas d'adresse email valide.\";\n+            $errors[] = \"Le professeur  {$professeurId} n'a pas d'adresse email valide.\";\n         }\n     }\n \n     // Gestion des messages d'erreur et de succès\n"
                },
                {
                    "date": 1732703187208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,12 +220,12 @@\n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$professeurId} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$professeu} ({$user->email}).\";\n             }\n         } else {\n-            $errors[] = \"Le professeur  {$professeurId} n'a pas d'adresse email valide.\";\n+            $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n     }\n \n     // Gestion des messages d'erreur et de succès\n"
                },
                {
                    "date": 1732703193979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$professeu} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$user->} ({$user->email}).\";\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732703200626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$user->} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$user->nom} ({$user->email}).\";\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732703249239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$user->nom} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$p->nom} ({$user->email}).\";\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732703254855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$p->nom} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732703286911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur Numéro {$professeur->nom} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur  {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732703293321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur  {$professeur->nom} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->nom} {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732703298692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->nom} {$professeur->nom} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenom} {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732703321681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenom} {$professeur->nom} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732708247751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,8 +215,9 @@\n \n         // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n+        \n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732708253271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,9 +215,9 @@\n \n         // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n-        \n+        dd();\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732708259491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,9 +215,9 @@\n \n         // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n-        dd();\n+        dd( $user);\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732708370464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,9 +215,9 @@\n \n         // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n-        dd( $user);\n+        // dd( $user);\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732708600334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,8 +182,9 @@\n     ]);\n \n     $classe = Classe::findOrFail($id);\n     $etablissementName = $classe->etablissement->nom;\n+    \n \n     $errors = [];  // Pour collecter les messages d'erreur\n     $success = []; // Pour collecter les messages de succès\n \n"
                },
                {
                    "date": 1732708609892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,11 +181,12 @@\n         'professeur_ids.*' => 'exists:professeurs,id',\n     ]);\n \n     $classe = Classe::findOrFail($id);\n+    classe\n     $etablissementName = $classe->etablissement->nom;\n-    \n \n+\n     $errors = [];  // Pour collecter les messages d'erreur\n     $success = []; // Pour collecter les messages de succès\n \n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n"
                },
                {
                    "date": 1732708619490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,9 +181,9 @@\n         'professeur_ids.*' => 'exists:professeurs,id',\n     ]);\n \n     $classe = Classe::findOrFail($id);\n-    classe\n+    $classe\n     $etablissementName = $classe->etablissement->nom;\n \n \n     $errors = [];  // Pour collecter les messages d'erreur\n"
                },
                {
                    "date": 1732708625464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,9 +181,9 @@\n         'professeur_ids.*' => 'exists:professeurs,id',\n     ]);\n \n     $classe = Classe::findOrFail($id);\n-    $classe\n+    $classe->nom;\n     $etablissementName = $classe->etablissement->nom;\n \n \n     $errors = [];  // Pour collecter les messages d'erreur\n"
                },
                {
                    "date": 1732708635503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,8 +182,9 @@\n     ]);\n \n     $classe = Classe::findOrFail($id);\n     $classe->nom;\n+    dd( $classe->nom;)\n     $etablissementName = $classe->etablissement->nom;\n \n \n     $errors = [];  // Pour collecter les messages d'erreur\n"
                },
                {
                    "date": 1732708642760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n     ]);\n \n     $classe = Classe::findOrFail($id);\n     $classe->nom;\n-    dd( $classe->nom;)\n+    dd($classe->nom);\n     $etablissementName = $classe->etablissement->nom;\n \n \n     $errors = [];  // Pour collecter les messages d'erreur\n"
                },
                {
                    "date": 1732708669801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,8 +184,9 @@\n     $classe = Classe::findOrFail($id);\n     $classe->nom;\n     dd($classe->nom);\n     $etablissementName = $classe->etablissement->nom;\n+    \n \n \n     $errors = [];  // Pour collecter les messages d'erreur\n     $success = []; // Pour collecter les messages de succès\n"
                },
                {
                    "date": 1732708676712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,9 @@\n     $classe = Classe::findOrFail($id);\n     $classe->nom;\n     dd($classe->nom);\n     $etablissementName = $classe->etablissement->nom;\n-    \n+    dd()\n \n \n     $errors = [];  // Pour collecter les messages d'erreur\n     $success = []; // Pour collecter les messages de succès\n"
                },
                {
                    "date": 1732708704117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,11 +182,11 @@\n     ]);\n \n     $classe = Classe::findOrFail($id);\n     $classe->nom;\n-    dd($classe->nom);\n+    // dd($classe->nom);\n     $etablissementName = $classe->etablissement->nom;\n-    dd()\n+    dd( $etablissementName);\n \n \n     $errors = [];  // Pour collecter les messages d'erreur\n     $success = []; // Pour collecter les messages de succès\n"
                },
                {
                    "date": 1732708748961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,9 +223,10 @@\n         // dd( $user);\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n-                Mail::to($user->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n+                Mail::to($user->email)\n+                ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n                 $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n"
                },
                {
                    "date": 1732708757620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,10 +223,10 @@\n         // dd( $user);\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n-                Mail::to($user->email)\n-                ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n+                Mail::to($user->email);\n+                // ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n                 $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n"
                },
                {
                    "date": 1732708772926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,9 @@\n     $classe = Classe::findOrFail($id);\n     $classe->nom;\n     // dd($classe->nom);\n     $etablissementName = $classe->etablissement->nom;\n-    dd( $etablissementName);\n+    // dd( $etablissementName);\n \n \n     $errors = [];  // Pour collecter les messages d'erreur\n     $success = []; // Pour collecter les messages de succès\n"
                },
                {
                    "date": 1732708953024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,9 @@\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email);\n-                // ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n+                ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n                 $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n"
                },
                {
                    "date": 1732709887331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,13 +219,13 @@\n \n         // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n-        // dd( $user);\n+        dd( $user);\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n-                Mail::to($user->email);\n+                Mail::to($user->email)\n                 ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n                 $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n             }\n"
                },
                {
                    "date": 1732709892642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n \n         // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n-        dd( $user);\n+        dd( $user->email);\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)\n"
                },
                {
                    "date": 1732709924434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n \n         // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n-        dd( $user->email);\n+        // dd( $user->email);\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)\n"
                },
                {
                    "date": 1732710092150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,9 @@\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)\n-                ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n+                ->send(new ProfessorAssignedNotification());\n             } catch (\\Exception $e) {\n                 $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n"
                },
                {
                    "date": 1732710141254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,9 @@\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)\n-                ->send(new ProfessorAssignedNotification());\n+                // ->send(new ProfessorAssignedNotification());\n             } catch (\\Exception $e) {\n                 $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n"
                },
                {
                    "date": 1732710149526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,9 @@\n \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)\n-                // ->send(new ProfessorAssignedNotification());\n+                ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n                 $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n"
                },
                {
                    "date": 1732710356138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n             try {\n                 Mail::to($user->email)\n                 ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n+                // $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732710366547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,8 +227,9 @@\n                 Mail::to($user->email)\n                 ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n                 // $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n+                $e;\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732710392585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,9 @@\n                 Mail::to($user->email)\n                 ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n                 // $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n-                $e;\n+                dd($e)\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732710404762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,9 @@\n                 Mail::to($user->email)\n                 ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n                 // $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n-                dd($e)\n+                dd()\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732710987294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,9 @@\n                 Mail::to($user->email)\n                 ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n                 // $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n-                dd()\n+                // dd($e);\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n"
                },
                {
                    "date": 1732712325393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n             try {\n                 Mail::to($user->email)\n                 ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                // $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n                 // dd($e);\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n@@ -292,9 +292,9 @@\n \n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n-dd($eleve->email_tuteur);\n+// dd($eleve->email_tuteur);\n         // Vérifier et envoyer l'email\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n"
                },
                {
                    "date": 1732712784850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -292,10 +292,8 @@\n \n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);\n         $classe->eleve()->save($eleve);\n-// dd($eleve->email_tuteur);\n-        // Vérifier et envoyer l'email\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n             } catch (\\Exception $e) {\n"
                },
                {
                    "date": 1732714050659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,8 @@\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n \n-        // Récupération de l'utilisateur associé au professeur pour l'envoi d'email\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n         // dd( $user->email);\n \n"
                },
                {
                    "date": 1732714059405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,8 @@\n                 continue; // Passer au prochain professeur\n             }\n         }\n \n-        // Si le professeur n'est pas affecté, on l'ajoute à la classe\n         DB::table('classe_professeur')->insert([\n             'classe_id' => $classe->id,\n             'professeur_id' => $professeurId,\n             'created_at' => now(),\n@@ -218,10 +217,8 @@\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n \n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; // Relation avec la table `users`\n-        // dd( $user->email);\n-\n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)\n                 ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n"
                },
                {
                    "date": 1732714067416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n \n         $professeur = Professeur::find($professeurId);\n-        $user = $professeur->user; // Relation avec la table `users`\n+        $user = $professeur->user; \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)\n                 ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n@@ -230,9 +230,8 @@\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n         }\n     }\n \n-    // Gestion des messages d'erreur et de succès\n     if (!empty($errors)) {\n         session()->flash('error', implode('<br>', $errors));\n     }\n \n"
                },
                {
                    "date": 1732714074985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,9 +188,9 @@\n     // dd( $etablissementName);\n \n \n     $errors = [];  // Pour collecter les messages d'erreur\n-    $success = []; // Pour collecter les messages de succès\n+    $success = []; \n \n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n         // Vérification si le professeur est déjà affecté à une classe\n         $professeurAffectation = DB::table('classe_professeur')\n"
                },
                {
                    "date": 1732714081892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,12 +184,9 @@\n     $classe = Classe::findOrFail($id);\n     $classe->nom;\n     // dd($classe->nom);\n     $etablissementName = $classe->etablissement->nom;\n-    // dd( $etablissementName);\n-\n-\n-    $errors = [];  // Pour collecter les messages d'erreur\n+    $errors = []; \n     $success = []; \n \n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n         // Vérification si le professeur est déjà affecté à une classe\n"
                },
                {
                    "date": 1732714092918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,34 +147,9 @@\n     $professeurs = Professeur::all();\n     return view('Administrateur.assign-professeurs', compact('classe', 'professeurs'));\n }\n \n-// public function storeAssignedTeacher(Request $request, $id)\n-// {\n-//     $validatedData = $request->validate([\n-//         'professeur_ids' => 'required|array',\n-//         'professeur_ids.*' => 'exists:professeurs,id',\n-//     ]);\n-//     $classe = Classe::findOrFail($id);\n-//      $etablissementName = $classe->etablissement->nom;\n-//     foreach ($validatedData['professeur_ids'] as $professeurId) {\n-//         DB::table('classe_professeur')->insert([\n-//             'classe_id' => $classe->id,\n-//             'professeur_id' => $professeurId,\n-//             'created_at' => now(),\n-//             'updated_at' => now(),\n-//         ]);\n-//     }\n-//     $professeur = Auth::user()->professeur;\n \n-//             if ($professeur && $professeur->email) {\n-//             Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n-//         } else {\n-//             return redirect()->route('classes.index')->with('error', 'Le professeur n\\'a pas d\\'email.');\n-//         }\n-\n-//         return redirect()->route('classes.index')->with('success', 'Professeurs assignés avec succès à la classe.');\n-// }\n public function storeAssignedTeacher(Request $request, $id)\n {\n     $validatedData = $request->validate([\n         'professeur_ids' => 'required|array',\n@@ -182,9 +157,8 @@\n     ]);\n \n     $classe = Classe::findOrFail($id);\n     $classe->nom;\n-    // dd($classe->nom);\n     $etablissementName = $classe->etablissement->nom;\n     $errors = []; \n     $success = []; \n \n"
                },
                {
                    "date": 1732714108697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,9 @@\n                 continue; // Passer au prochain professeur\n             } else {\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n-                continue; // Passer au prochain professeur\n+                continue; \n             }\n         }\n \n         DB::table('classe_professeur')->insert([\n"
                },
                {
                    "date": 1732714115353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,17 +162,16 @@\n     $errors = []; \n     $success = []; \n \n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n-        // Vérification si le professeur est déjà affecté à une classe\n         $professeurAffectation = DB::table('classe_professeur')\n             ->where('professeur_id', $professeurId)\n             ->first();\n \n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n-                continue; // Passer au prochain professeur\n+                continue;\n             } else {\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; \n"
                },
                {
                    "date": 1732714122624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,9 +165,8 @@\n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n         $professeurAffectation = DB::table('classe_professeur')\n             ->where('professeur_id', $professeurId)\n             ->first();\n-\n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n                 continue;\n@@ -176,17 +175,15 @@\n                 Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; \n             }\n         }\n-\n         DB::table('classe_professeur')->insert([\n             'classe_id' => $classe->id,\n             'professeur_id' => $professeurId,\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n-\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n"
                },
                {
                    "date": 1732714133622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,34 +217,11 @@\n     $classe = Classe::findOrFail($id);\n     $eleves = Eleves::all();\n     return view('Administrateur.assign-eleves', compact('classe', 'eleves'));\n }\n-// public function storeAssignedStudents(Request $request, $id)\n-// {\n-//     $classe = Classe::findOrFail($id);\n-//     $validatedData = $request->validate([\n-//         'eleve_ids' => 'required|array',\n-//         'eleve_ids.*' => 'exists:eleves,id', \n-//     ]);\n-    \n-//     foreach ($validatedData['eleve_ids'] as $eleveId) {\n-//         $eleve = Eleves::findOrFail($eleveId);\n-//         $classe->eleve()->save($eleve);\n-//     }\n-//     if (filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n-//         // dd( Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve)));\n-//         Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n-//     } else {\n-//         // Gérer les cas où l'email est invalide ou manquant\n-//         return redirect()->back()->withErrors(['email' => 'L\\'email du tuteur est invalide.']);\n-//     }\n-    \n \n \n-//     return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n-// }\n \n-\n public function storeAssignedStudents(Request $request, $id)\n {\n     $classe = Classe::findOrFail($id);\n     $validatedData = $request->validate([\n"
                },
                {
                    "date": 1732714609004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,21 +218,38 @@\n     $eleves = Eleves::all();\n     return view('Administrateur.assign-eleves', compact('classe', 'eleves'));\n }\n \n-\n-\n public function storeAssignedStudents(Request $request, $id)\n {\n     $classe = Classe::findOrFail($id);\n     $validatedData = $request->validate([\n         'eleve_ids' => 'required|array',\n-        'eleve_ids.*' => 'exists:eleves,id', \n+        'eleve_ids.*' => 'exists:eleves,id',\n     ]);\n \n+    $errors = [];  // Pour collecter les erreurs\n+    $success = []; // Pour collecter les succès\n+\n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);\n+        \n+        // Vérifier si l'élève est déjà affecté à la classe\n+        $affectationExistante = DB::table('classe_eleve')\n+            ->where('eleve_id', $eleveId)\n+            ->where('classe_id', $classe->id)\n+            ->first();\n+        \n+        if ($affectationExistante) {\n+            $errors[] = \"L'élève ID {$eleveId} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n+            continue;  // Passer à l'élève suivant sans l'affecter\n+        }\n+\n+        // Affecter l'élève à la classe\n         $classe->eleve()->save($eleve);\n+        $success[] = \"L'élève ID {$eleveId} a été affecté avec succès à la classe.\";\n+\n+        // Envoyer un email au tuteur de l'élève\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n             } catch (\\Exception $e) {\n@@ -242,14 +259,22 @@\n             Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n         }\n     }\n \n-    return redirect()->route('classes.index', $classe->id)\n-    ->with('success', 'Élèves assignés avec succès à la classe.');\n+    // Affichage des messages d'erreur et de succès\n+    if (!empty($errors)) {\n+        session()->flash('error', implode('<br>', $errors));\n+    }\n \n+    if (!empty($success)) {\n+        session()->flash('success', implode('<br>', $success));\n+    }\n+\n+    return redirect()->route('classes.index', $classe->id);\n }\n \n \n+\n public function detachProfesseurFromClasse($classeId, $professeurId)\n {\n     $classe = Classe::find($classeId);\n     $professeur = Professeur::find($professeurId);\n"
                },
                {
                    "date": 1732714615804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,63 +218,36 @@\n     $eleves = Eleves::all();\n     return view('Administrateur.assign-eleves', compact('classe', 'eleves'));\n }\n \n-public function storeAssignedStudents(Request $request, $id)\n-{\n-    $classe = Classe::findOrFail($id);\n-    $validatedData = $request->validate([\n-        'eleve_ids' => 'required|array',\n-        'eleve_ids.*' => 'exists:eleves,id',\n-    ]);\n+// public function storeAssignedStudents(Request $request, $id)\n+// {\n+//     $classe = Classe::findOrFail($id);\n+//     $validatedData = $request->validate([\n+//         'eleve_ids' => 'required|array',\n+//         'eleve_ids.*' => 'exists:eleves,id', \n+//     ]);\n \n-    $errors = [];  // Pour collecter les erreurs\n-    $success = []; // Pour collecter les succès\n+//     foreach ($validatedData['eleve_ids'] as $eleveId) {\n+//         $eleve = Eleves::findOrFail($eleveId);\n+//         $classe->eleve()->save($eleve);\n+//         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n+//             try {\n+//                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n+//             } catch (\\Exception $e) {\n+//                 Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève ID ' . $eleve->id . ' : ' . $e->getMessage());\n+//             }\n+//         } else {\n+//             Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n+//         }\n+//     }\n \n-    foreach ($validatedData['eleve_ids'] as $eleveId) {\n-        $eleve = Eleves::findOrFail($eleveId);\n-        \n-        // Vérifier si l'élève est déjà affecté à la classe\n-        $affectationExistante = DB::table('classe_eleve')\n-            ->where('eleve_id', $eleveId)\n-            ->where('classe_id', $classe->id)\n-            ->first();\n-        \n-        if ($affectationExistante) {\n-            $errors[] = \"L'élève ID {$eleveId} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n-            continue;  // Passer à l'élève suivant sans l'affecter\n-        }\n+//     return redirect()->route('classes.index', $classe->id)\n+//     ->with('success', 'Élèves assignés avec succès à la classe.');\n \n-        // Affecter l'élève à la classe\n-        $classe->eleve()->save($eleve);\n-        $success[] = \"L'élève ID {$eleveId} a été affecté avec succès à la classe.\";\n+// }\n \n-        // Envoyer un email au tuteur de l'élève\n-        if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n-            try {\n-                Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n-            } catch (\\Exception $e) {\n-                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève ID ' . $eleve->id . ' : ' . $e->getMessage());\n-            }\n-        } else {\n-            Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n-        }\n-    }\n \n-    // Affichage des messages d'erreur et de succès\n-    if (!empty($errors)) {\n-        session()->flash('error', implode('<br>', $errors));\n-    }\n-\n-    if (!empty($success)) {\n-        session()->flash('success', implode('<br>', $success));\n-    }\n-\n-    return redirect()->route('classes.index', $classe->id);\n-}\n-\n-\n-\n public function detachProfesseurFromClasse($classeId, $professeurId)\n {\n     $classe = Classe::find($classeId);\n     $professeur = Professeur::find($professeurId);\n"
                },
                {
                    "date": 1732714634454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -245,9 +245,61 @@\n //     ->with('success', 'Élèves assignés avec succès à la classe.');\n \n // }\n \n+public function storeAssignedStudents(Request $request, $id)\n+{\n+    $classe = Classe::findOrFail($id);\n+    $validatedData = $request->validate([\n+        'eleve_ids' => 'required|array',\n+        'eleve_ids.*' => 'exists:eleves,id',\n+    ]);\n \n+    $errors = [];  // Pour collecter les erreurs\n+    $success = []; // Pour collecter les succès\n+\n+    foreach ($validatedData['eleve_ids'] as $eleveId) {\n+        $eleve = Eleves::findOrFail($eleveId);\n+        \n+        // Vérifier si l'élève est déjà affecté à la classe\n+        $affectationExistante = DB::table('classe_eleve')\n+            ->where('eleve_id', $eleveId)\n+            ->where('classe_id', $classe->id)\n+            ->first();\n+        \n+        if ($affectationExistante) {\n+            $errors[] = \"L'élève ID {$eleveId} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n+            continue;  \n+        }\n+\n+        // Affecter l'élève à la classe\n+        $classe->eleve()->save($eleve);\n+        $success[] = \"L'élève ID {$eleveId} a été affecté avec succès à la classe.\";\n+\n+        // Envoyer un email au tuteur de l'élève\n+        if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n+            try {\n+                Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n+            } catch (\\Exception $e) {\n+                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève ID ' . $eleve->id . ' : ' . $e->getMessage());\n+            }\n+        } else {\n+            Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n+        }\n+    }\n+\n+    // Affichage des messages d'erreur et de succès\n+    if (!empty($errors)) {\n+        session()->flash('error', implode('<br>', $errors));\n+    }\n+\n+    if (!empty($success)) {\n+        session()->flash('success', implode('<br>', $success));\n+    }\n+\n+    return redirect()->route('classes.index', $classe->id);\n+}\n+\n public function detachProfesseurFromClasse($classeId, $professeurId)\n {\n     $classe = Classe::find($classeId);\n     $professeur = Professeur::find($professeurId);\n"
                },
                {
                    "date": 1732714642122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n             ->where('classe_id', $classe->id)\n             ->first();\n         \n         if ($affectationExistante) {\n-            $errors[] = \"L'élève ID {$eleveId} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n+            $errors[] = \"L'élève Numéro {$eleveId} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n             continue;  \n         }\n \n         // Affecter l'élève à la classe\n"
                },
                {
                    "date": 1732714655668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -272,9 +272,9 @@\n         }\n \n         // Affecter l'élève à la classe\n         $classe->eleve()->save($eleve);\n-        $success[] = \"L'élève ID {$eleveId} a été affecté avec succès à la classe.\";\n+        $success[] = \"L'élève Numéro {$eleveId} a été affecté avec succès à la classe.\";\n \n         // Envoyer un email au tuteur de l'élève\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n"
                },
                {
                    "date": 1732714668644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n             } catch (\\Exception $e) {\n-                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève ID ' . $eleve->id . ' : ' . $e->getMessage());\n+                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->id . ' : ' . $e->getMessage());\n             }\n         } else {\n             Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n         }\n"
                },
                {
                    "date": 1732714678831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n             } catch (\\Exception $e) {\n-                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->id . ' : ' . $e->getMessage());\n+                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms  . ' : ' . $e->getMessage());\n             }\n         } else {\n             Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n         }\n"
                },
                {
                    "date": 1732714686866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n             } catch (\\Exception $e) {\n-                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms  . ' : ' . $e->getMessage());\n+                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms  $eleve->preno . ' : ' . $e->getMessage());\n             }\n         } else {\n             Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n         }\n"
                },
                {
                    "date": 1732714693574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n             } catch (\\Exception $e) {\n-                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms  $eleve->preno . ' : ' . $e->getMessage());\n+                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms  $eleve->nom . ' : ' . $e->getMessage());\n             }\n         } else {\n             Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n         }\n"
                },
                {
                    "date": 1732714705858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,12 +279,12 @@\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n             } catch (\\Exception $e) {\n-                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms  $eleve->nom . ' : ' . $e->getMessage());\n+                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms.  $eleve->nom . ' : ' . $e->getMessage());\n             }\n         } else {\n-            Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n+            Log::warning('Email tuteur non valide ou absent pour l\\'élèveD : ' . $eleve->id);\n         }\n     }\n \n     // Affichage des messages d'erreur et de succès\n"
                },
                {
                    "date": 1732714717370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,9 +282,9 @@\n             } catch (\\Exception $e) {\n                 Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms.  $eleve->nom . ' : ' . $e->getMessage());\n             }\n         } else {\n-            Log::warning('Email tuteur non valide ou absent pour l\\'élèveD : ' . $eleve->id);\n+            Log::warning('Email tuteur non valide ou absent pour l\\'élèveD : ' . $eleve->prenoms);\n         }\n     }\n \n     // Affichage des messages d'erreur et de succès\n"
                },
                {
                    "date": 1732714727790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,9 +282,9 @@\n             } catch (\\Exception $e) {\n                 Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms.  $eleve->nom . ' : ' . $e->getMessage());\n             }\n         } else {\n-            Log::warning('Email tuteur non valide ou absent pour l\\'élèveD : ' . $eleve->prenoms);\n+            Log::warning('Email tuteur non valide ou absent pour l\\'élèveD : ' . $eleve->prenoms .$eleve->nom );\n         }\n     }\n \n     // Affichage des messages d'erreur et de succès\n"
                },
                {
                    "date": 1732714759907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n             ->where('classe_id', $classe->id)\n             ->first();\n         \n         if ($affectationExistante) {\n-            $errors[] = \"L'élève Numéro {$eleveId} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n+            $errors[] = \"L'élève Numéro {$eleve->prenoms} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n             continue;  \n         }\n \n         // Affecter l'élève à la classe\n@@ -282,9 +282,9 @@\n             } catch (\\Exception $e) {\n                 Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms.  $eleve->nom . ' : ' . $e->getMessage());\n             }\n         } else {\n-            Log::warning('Email tuteur non valide ou absent pour l\\'élèveD : ' . $eleve->prenoms .$eleve->nom );\n+            Log::warning('Email tuteur non valide ou absent pour l\\'élèveD : ' . $eleve->prenoms .$eleve->nom);\n         }\n     }\n \n     // Affichage des messages d'erreur et de succès\n"
                },
                {
                    "date": 1732714769451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n             ->where('classe_id', $classe->id)\n             ->first();\n         \n         if ($affectationExistante) {\n-            $errors[] = \"L'élève Numéro {$eleve->prenoms} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n+            $errors[] = \"L'élève Numéro {$eleve->prenoms, $eleve->nom} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n             continue;  \n         }\n \n         // Affecter l'élève à la classe\n"
                },
                {
                    "date": 1732714780968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n             ->where('classe_id', $classe->id)\n             ->first();\n         \n         if ($affectationExistante) {\n-            $errors[] = \"L'élève Numéro {$eleve->prenoms, $eleve->nom} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n+            $errors[] = \"L'élève Numéro {$eleve->prenoms} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n             continue;  \n         }\n \n         // Affecter l'élève à la classe\n"
                },
                {
                    "date": 1732714786670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n             ->where('classe_id', $classe->id)\n             ->first();\n         \n         if ($affectationExistante) {\n-            $errors[] = \"L'élève Numéro {$eleve->prenoms} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n+            $errors[] = \"L'élève Numéro {$eleve->prenoms} { est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n             continue;  \n         }\n \n         // Affecter l'élève à la classe\n"
                },
                {
                    "date": 1732714792801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n             ->where('classe_id', $classe->id)\n             ->first();\n         \n         if ($affectationExistante) {\n-            $errors[] = \"L'élève Numéro {$eleve->prenoms} { est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n+            $errors[] = \"L'élève Numéro {$eleve->prenoms} {$eleve->nom} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n             continue;  \n         }\n \n         // Affecter l'élève à la classe\n"
                },
                {
                    "date": 1732714808841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -272,9 +272,9 @@\n         }\n \n         // Affecter l'élève à la classe\n         $classe->eleve()->save($eleve);\n-        $success[] = \"L'élève Numéro {$eleveId} a été affecté avec succès à la classe.\";\n+        $success[] = \"L'élève Numéro {$eleve->prenoms} {$eleve->nom} a été affecté avec succès à la classe.\";\n \n         // Envoyer un email au tuteur de l'élève\n         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n             try {\n"
                },
                {
                    "date": 1732714835912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,9 +173,9 @@\n             } else {\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; \n-            }\n+            }{$professeur->prenoms}\n         }\n         DB::table('classe_professeur')->insert([\n             'classe_id' => $classe->id,\n             'professeur_id' => $professeurId,\n@@ -189,9 +189,9 @@\n             try {\n                 Mail::to($user->email)\n                 ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur  {$professeur->nom} ({$user->email}).\";\n                 // dd($e);\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n"
                },
                {
                    "date": 1732714853298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,12 +170,12 @@\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n-                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n+                $errors[] = \"Le professeur {$professeur->prenoms} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; \n-            }{$professeur->prenoms}\n+            }\n         }\n         DB::table('classe_professeur')->insert([\n             'classe_id' => $classe->id,\n             'professeur_id' => $professeurId,\n@@ -189,9 +189,9 @@\n             try {\n                 Mail::to($user->email)\n                 ->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n             } catch (\\Exception $e) {\n-                $errors[] = \"Échec de l'envoi de l'email au professeur  {$professeur->nom} ({$user->email}).\";\n+                $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n                 // dd($e);\n             }\n         } else {\n             $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n"
                },
                {
                    "date": 1732714861952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,9 @@\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n-                $errors[] = \"Le professeur {$professeur->prenoms} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n+                $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; \n             }\n         }\n"
                },
                {
                    "date": 1732714871357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n             ->where('professeur_id', $professeurId)\n             ->first();\n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n-                $errors[] = \"Le professeur Numéro {$professeurId} est déjà affecté à cette classe.\";\n+                $errors[] = \"Le professeur {$professeur->nom} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n                 $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n"
                },
                {
                    "date": 1732714884288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n             ->where('professeur_id', $professeurId)\n             ->first();\n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n-                $errors[] = \"Le professeur {$professeur->nom} est déjà affecté à cette classe.\";\n+                $errors[] = \"Le professeur {$professeur->prenoms}  {$professeur->nom} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n                 $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n"
                },
                {
                    "date": 1732714893928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,9 +181,9 @@\n             'professeur_id' => $professeurId,\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n-        $success[] = \"Le professeur Numéro {$professeurId} a été affecté avec succès à la classe.\";\n+        $success[] = \"Le professeur {$professeur->prenoms}  a été affecté avec succès à la classe.\";\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n"
                },
                {
                    "date": 1732714904248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,9 +181,9 @@\n             'professeur_id' => $professeurId,\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n-        $success[] = \"Le professeur {$professeur->prenoms}  a été affecté avec succès à la classe.\";\n+        $success[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} a été affecté avec succès à la classe.\";\n         $professeur = Professeur::find($professeurId);\n         $user = $professeur->user; \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n"
                },
                {
                    "date": 1732714914033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,9 @@\n                 $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n                 // dd($e);\n             }\n         } else {\n-            $errors[] = \"Le professeur Numéro {$professeurId} n'a pas d'adresse email valide.\";\n+            $errors[] = \"Le professeur {$professeur->nom} n'a pas d'adresse email valide.\";\n         }\n     }\n \n     if (!empty($errors)) {\n"
                },
                {
                    "date": 1732714921972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,9 @@\n                 $errors[] = \"Échec de l'envoi de l'email au professeur {$professeur->prenoms} {$professeur->nom} ({$user->email}).\";\n                 // dd($e);\n             }\n         } else {\n-            $errors[] = \"Le professeur {$professeur->nom} n'a pas d'adresse email valide.\";\n+            $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} n'a pas d'adresse email valide.\";\n         }\n     }\n \n     if (!empty($errors)) {\n"
                },
                {
                    "date": 1732714952714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,35 +218,10 @@\n     $eleves = Eleves::all();\n     return view('Administrateur.assign-eleves', compact('classe', 'eleves'));\n }\n \n-// public function storeAssignedStudents(Request $request, $id)\n-// {\n-//     $classe = Classe::findOrFail($id);\n-//     $validatedData = $request->validate([\n-//         'eleve_ids' => 'required|array',\n-//         'eleve_ids.*' => 'exists:eleves,id', \n-//     ]);\n \n-//     foreach ($validatedData['eleve_ids'] as $eleveId) {\n-//         $eleve = Eleves::findOrFail($eleveId);\n-//         $classe->eleve()->save($eleve);\n-//         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n-//             try {\n-//                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n-//             } catch (\\Exception $e) {\n-//                 Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève ID ' . $eleve->id . ' : ' . $e->getMessage());\n-//             }\n-//         } else {\n-//             Log::warning('Email tuteur non valide ou absent pour l\\'élève ID : ' . $eleve->id);\n-//         }\n-//     }\n \n-//     return redirect()->route('classes.index', $classe->id)\n-//     ->with('success', 'Élèves assignés avec succès à la classe.');\n-\n-// }\n-\n public function storeAssignedStudents(Request $request, $id)\n {\n     $classe = Classe::findOrFail($id);\n     $validatedData = $request->validate([\n"
                },
                {
                    "date": 1732715174556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,13 +215,10 @@\n public function assignStudents($id)\n {\n     $classe = Classe::findOrFail($id);\n     $eleves = Eleves::all();\n-    return view('Administrateur.assign-eleves', compact('classe', 'eleves'));\n+    return view('Administrateur.assign-eleves', compact('classe', 'eleve'));\n }\n-\n-\n-\n public function storeAssignedStudents(Request $request, $id)\n {\n     $classe = Classe::findOrFail($id);\n     $validatedData = $request->validate([\n"
                },
                {
                    "date": 1732720384947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,60 +217,60 @@\n     $classe = Classe::findOrFail($id);\n     $eleves = Eleves::all();\n     return view('Administrateur.assign-eleves', compact('classe', 'eleve'));\n }\n-public function storeAssignedStudents(Request $request, $id)\n-{\n-    $classe = Classe::findOrFail($id);\n-    $validatedData = $request->validate([\n-        'eleve_ids' => 'required|array',\n-        'eleve_ids.*' => 'exists:eleves,id',\n-    ]);\n+// public function storeAssignedStudents(Request $request, $id)\n+// {\n+//     $classe = Classe::findOrFail($id);\n+//     $validatedData = $request->validate([\n+//         'eleve_ids' => 'required|array',\n+//         'eleve_ids.*' => 'exists:eleves,id',\n+//     ]);\n \n-    $errors = [];  // Pour collecter les erreurs\n-    $success = []; // Pour collecter les succès\n+//     $errors = [];  // Pour collecter les erreurs\n+//     $success = []; // Pour collecter les succès\n \n-    foreach ($validatedData['eleve_ids'] as $eleveId) {\n-        $eleve = Eleves::findOrFail($eleveId);\n+//     foreach ($validatedData['eleve_ids'] as $eleveId) {\n+//         $eleve = Eleves::findOrFail($eleveId);\n         \n-        // Vérifier si l'élève est déjà affecté à la classe\n-        $affectationExistante = DB::table('classe_eleve')\n-            ->where('eleve_id', $eleveId)\n-            ->where('classe_id', $classe->id)\n-            ->first();\n+//         // Vérifier si l'élève est déjà affecté à la classe\n+//         $affectationExistante = DB::table('classe_eleve')\n+//             ->where('eleve_id', $eleveId)\n+//             ->where('classe_id', $classe->id)\n+//             ->first();\n         \n-        if ($affectationExistante) {\n-            $errors[] = \"L'élève Numéro {$eleve->prenoms} {$eleve->nom} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n-            continue;  \n-        }\n+//         if ($affectationExistante) {\n+//             $errors[] = \"L'élève Numéro {$eleve->prenoms} {$eleve->nom} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n+//             continue;  \n+//         }\n \n-        // Affecter l'élève à la classe\n-        $classe->eleve()->save($eleve);\n-        $success[] = \"L'élève Numéro {$eleve->prenoms} {$eleve->nom} a été affecté avec succès à la classe.\";\n+//         // Affecter l'élève à la classe\n+//         $classe->eleve()->save($eleve);\n+//         $success[] = \"L'élève Numéro {$eleve->prenoms} {$eleve->nom} a été affecté avec succès à la classe.\";\n \n-        // Envoyer un email au tuteur de l'élève\n-        if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n-            try {\n-                Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n-            } catch (\\Exception $e) {\n-                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms.  $eleve->nom . ' : ' . $e->getMessage());\n-            }\n-        } else {\n-            Log::warning('Email tuteur non valide ou absent pour l\\'élèveD : ' . $eleve->prenoms .$eleve->nom);\n-        }\n-    }\n+//         // Envoyer un email au tuteur de l'élève\n+//         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n+//             try {\n+//                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n+//             } catch (\\Exception $e) {\n+//                 Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms.  $eleve->nom . ' : ' . $e->getMessage());\n+//             }\n+//         } else {\n+//             Log::warning('Email tuteur non valide ou absent pour l\\'élèveD : ' . $eleve->prenoms .$eleve->nom);\n+//         }\n+//     }\n \n-    // Affichage des messages d'erreur et de succès\n-    if (!empty($errors)) {\n-        session()->flash('error', implode('<br>', $errors));\n-    }\n+//     // Affichage des messages d'erreur et de succès\n+//     if (!empty($errors)) {\n+//         session()->flash('error', implode('<br>', $errors));\n+//     }\n \n-    if (!empty($success)) {\n-        session()->flash('success', implode('<br>', $success));\n-    }\n+//     if (!empty($success)) {\n+//         session()->flash('success', implode('<br>', $success));\n+//     }\n \n-    return redirect()->route('classes.index', $classe->id);\n-}\n+//     return redirect()->route('classes.index', $classe->id);\n+// }\n \n public function detachProfesseurFromClasse($classeId, $professeurId)\n {\n     $classe = Classe::find($classeId);\n"
                },
                {
                    "date": 1732720449068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} a été affecté avec succès à la classe.\";\n-        $professeur = Professeur::find($professeurId);\n+       \n         $user = $professeur->user; \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)\n@@ -269,9 +269,70 @@\n //     }\n \n //     return redirect()->route('classes.index', $classe->id);\n // }\n+public function storeAssignedStudents(Request $request, $id)\n+{\n+    $classe = Classe::findOrFail($id);  // Récupère la classe\n+    $validatedData = $request->validate([\n+        'eleve_ids' => 'required|array',  // Validation des élèves à affecter\n+        'eleve_ids.*' => 'exists:eleves,id',  // Vérification de l'existence des IDs des élèves\n+    ]);\n \n+    $errors = [];  // Liste pour collecter les erreurs\n+    $success = []; // Liste pour collecter les succès\n+\n+    foreach ($validatedData['eleve_ids'] as $eleveId) {\n+        $eleve = Eleves::findOrFail($eleveId);  // Récupère l'élève à partir de son ID\n+        \n+        // Vérifier si l'élève est déjà affecté à la classe\n+        if ($eleve->classe_id && $eleve->classe_id == $classe->id) {\n+            // Si l'élève est déjà affecté à cette classe, on ajoute une erreur\n+            $errors[] = \"L'élève {$eleve->prenoms} {$eleve->nom} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n+            continue;  // Passe à l'élève suivant\n+        }\n+\n+        // Si l'élève est affecté à une autre classe, envoyer un message d'erreur\n+        if ($eleve->classe_id && $eleve->classe_id != $classe->id) {\n+            // Message pour l'élève déjà affecté à une autre classe\n+            $errors[] = \"L'élève {$eleve->prenoms} {$eleve->nom} est déjà affecté à une autre classe. Veuillez le retirer de l'autre classe avant de l'affecter à cette classe.\";\n+            continue;  // Passe à l'élève suivant\n+        }\n+\n+        // Si aucun problème, affecter l'élève à la classe\n+        $eleve->classe_id = $classe->id;\n+        $eleve->save();\n+\n+        // Message de succès pour l'affectation\n+        $success[] = \"L'élève {$eleve->prenoms} {$eleve->nom} a été affecté avec succès à la classe.\";\n+\n+        // Envoi de l'email au tuteur de l'élève\n+        if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n+            try {\n+                Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n+            } catch (\\Exception $e) {\n+                // En cas d'échec de l'envoi de l'email, on log l'erreur\n+                Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève ' . $eleve->prenoms . ' ' . $eleve->nom . ' : ' . $e->getMessage());\n+            }\n+        } else {\n+            // Si l'email du tuteur est invalide ou absent, on log un avertissement\n+            Log::warning('Email tuteur non valide ou absent pour l\\'élève ' . $eleve->prenoms . ' ' . $eleve->nom);\n+        }\n+    }\n+\n+    // Affichage des messages d'erreur et de succès\n+    if (!empty($errors)) {\n+        session()->flash('error', implode('<br>', $errors));\n+    }\n+\n+    if (!empty($success)) {\n+        session()->flash('success', implode('<br>', $success));\n+    }\n+\n+    // Redirection vers la page de la classe\n+    return redirect()->route('classes.index', $classe->id);\n+}\n+\n public function detachProfesseurFromClasse($classeId, $professeurId)\n {\n     $classe = Classe::find($classeId);\n     $professeur = Professeur::find($professeurId);\n"
                },
                {
                    "date": 1732720549434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n             'created_at' => now(),\n             'updated_at' => now(),\n         ]);\n         $success[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} a été affecté avec succès à la classe.\";\n-       \n+     \n         $user = $professeur->user; \n         if ($user && filter_var($user->email, FILTER_VALIDATE_EMAIL)) {\n             try {\n                 Mail::to($user->email)\n"
                },
                {
                    "date": 1732720620288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur {$professeur->prenoms}  {$professeur->nom} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n-                $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n+                $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id->}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; \n             }\n         }\n"
                },
                {
                    "date": 1732720664524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,17 +162,18 @@\n     $errors = []; \n     $success = []; \n \n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n+        $professeur = Professeur::find($professeurId);\n         $professeurAffectation = DB::table('classe_professeur')\n             ->where('professeur_id', $professeurId)\n             ->first();\n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur {$professeur->prenoms}  {$professeur->nom} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n-                $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id->}). \n+                $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->$classe->nom}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; \n             }\n         }\n"
                },
                {
                    "date": 1732720688183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,18 +162,18 @@\n     $errors = []; \n     $success = []; \n \n     foreach ($validatedData['professeur_ids'] as $professeurId) {\n-        $professeur = Professeur::find($professeurId);\n+           $professeur = Professeur::find($professeurId);\n         $professeurAffectation = DB::table('classe_professeur')\n             ->where('professeur_id', $professeurId)\n             ->first();\n         if ($professeurAffectation) {\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur {$professeur->prenoms}  {$professeur->nom} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n-                $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->$classe->nom}). \n+                $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le désaffecter avant de le réaffecter.\";\n                 continue; \n             }\n         }\n"
                },
                {
                    "date": 1732720717914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n                 $errors[] = \"Le professeur {$professeur->prenoms}  {$professeur->nom} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n                 $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n-                Veuillez le désaffecter avant de le réaffecter.\";\n+                Veuillez le retirer avant de le réaffecter.\";\n                 continue; \n             }\n         }\n         DB::table('classe_professeur')->insert([\n"
                },
                {
                    "date": 1732720736780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n                 $errors[] = \"Le professeur {$professeur->prenoms}  {$professeur->nom} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n                 $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n-                Veuillez le retirer avant de le réaffecter.\";\n+                  Veuillez le retirer avant de le réaffecter.\";\n                 continue; \n             }\n         }\n         DB::table('classe_professeur')->insert([\n"
                },
                {
                    "date": 1732720753140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,10 +171,10 @@\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur {$professeur->prenoms}  {$professeur->nom} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n-                $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n-                  Veuillez le retirer avant de le réaffecter.\";\n+                $errors[] = \" Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n+                Veuillez le retirer avant de le réaffecter.\";\n                 continue; \n             }\n         }\n         DB::table('classe_professeur')->insert([\n"
                },
                {
                    "date": 1732720758996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur {$professeur->prenoms}  {$professeur->nom} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n-                $errors[] = \" Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n+                $errors[] = \"Le professeur {$professeur->prenoms}  {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le retirer avant de le réaffecter.\";\n                 continue; \n             }\n         }\n"
                },
                {
                    "date": 1732720765777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n             if ($professeurAffectation->classe_id == $classe->id) {\n                 $errors[] = \"Le professeur {$professeur->prenoms}  {$professeur->nom} est déjà affecté à cette classe.\";\n                 continue;\n             } else {\n-                $errors[] = \"Le professeur {$professeur->prenoms}  {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n+                $errors[] = \"Le professeur {$professeur->prenoms} {$professeur->nom} est déjà affecté à une autre classe (Classe Numéro {$professeurAffectation->classe_id}). \n                 Veuillez le retirer avant de le réaffecter.\";\n                 continue; \n             }\n         }\n"
                },
                {
                    "date": 1733225371235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,13 +26,13 @@\n      * Display a listing of the resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n      */\n-    public function index()\n-    {\n-        $classes = Classe::where('is_delete', false)->get();\n-        return view('Administrateur.Classe.listDesClasses', compact('classes'));\n-    }\n+    // public function index()\n+    // {\n+    //     $classes = Classe::where('is_delete', false)->get();\n+    //     return view('Administrateur.Classe.listDesClasses', compact('classes'));\n+    // }\n \n     /**\n      * Show the form for creating a new resource.\n      *\n"
                },
                {
                    "date": 1733225388902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,21 @@\n     //     $classes = Classe::where('is_delete', false)->get();\n     //     return view('Administrateur.Classe.listDesClasses', compact('classes'));\n     // }\n \n+    public function index()\n+{\n+    // Récupérer l'établissement de l'administrateur connecté\n+    $etablissementId = auth()->administrateur()->etablissement_id; // ou une autre logique pour récupérer l'établissement de l'admin connecté\n+\n+    // Filtrer les classes pour cet établissement\n+    $classes = Classe::where('is_delete', false)\n+                     ->where('etablissement_id', $etablissementId) // Ajouter cette condition pour filtrer par établissement\n+                     ->get();\n+\n+    return view('Administrateur.Classe.listDesClasses', compact('classes'));\n+}\n+\n     /**\n      * Show the form for creating a new resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n"
                },
                {
                    "date": 1733225396860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,9 @@\n \n     public function index()\n {\n     // Récupérer l'établissement de l'administrateur connecté\n-    $etablissementId = auth()->administrateur()->etablissement_id; // ou une autre logique pour récupérer l'établissement de l'admin connecté\n-\n+    $etablissementId = auth()->administrateur()->etablissement_id; \n     // Filtrer les classes pour cet établissement\n     $classes = Classe::where('is_delete', false)\n                      ->where('etablissement_id', $etablissementId) // Ajouter cette condition pour filtrer par établissement\n                      ->get();\n"
                },
                {
                    "date": 1733225406664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     // Récupérer l'établissement de l'administrateur connecté\n     $etablissementId = auth()->administrateur()->etablissement_id; \n     // Filtrer les classes pour cet établissement\n     $classes = Classe::where('is_delete', false)\n-                     ->where('etablissement_id', $etablissementId) // Ajouter cette condition pour filtrer par établissement\n+                     ->where('etablissement_id', $etablissementId) \n                      ->get();\n \n     return view('Administrateur.Classe.listDesClasses', compact('classes'));\n }\n"
                },
                {
                    "date": 1733226133409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,19 +33,21 @@\n     //     return view('Administrateur.Classe.listDesClasses', compact('classes'));\n     // }\n \n     public function index()\n-{\n-    // Récupérer l'établissement de l'administrateur connecté\n-    $etablissementId = auth()->administrateur()->etablissement_id; \n-    // Filtrer les classes pour cet établissement\n-    $classes = Classe::where('is_delete', false)\n-                     ->where('etablissement_id', $etablissementId) \n-                     ->get();\n+    {\n+        // Récupérer l'administrateur connecté\n+        $administrateurId = auth()->user()->id;\n+    \n+        // Filtrer les classes associées à cet administrateur\n+        $classes = Classe::where('administrateur_id', $administrateurId)\n+                         ->where('is_delete', false)\n+                         ->get();\n+    \n+        return view('Administrateur.Classe.listDesClasses', compact('classes'));\n+    }\n+    \n \n-    return view('Administrateur.Classe.listDesClasses', compact('classes'));\n-}\n-\n     /**\n      * Show the form for creating a new resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n"
                },
                {
                    "date": 1733226184929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n     public function index()\n     {\n         // Récupérer l'administrateur connecté\n         $administrateurId = auth()->user()->id;\n+        $admin = Auth::guard('admin')->user();\n     \n         // Filtrer les classes associées à cet administrateur\n         $classes = Classe::where('administrateur_id', $administrateurId)\n                          ->where('is_delete', false)\n"
                },
                {
                    "date": 1733226197484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     public function index()\n     {\n         // Récupérer l'administrateur connecté\n         $administrateurId = auth()->user()->id;\n-        $admin = Auth::guard('admin')->user();\n+        $admin = Auth::guard('admin')->user()->id;\n     \n         // Filtrer les classes associées à cet administrateur\n         $classes = Classe::where('administrateur_id', $administrateurId)\n                          ->where('is_delete', false)\n"
                },
                {
                    "date": 1733226282071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,13 +35,13 @@\n \n     public function index()\n     {\n         // Récupérer l'administrateur connecté\n-        $administrateurId = auth()->user()->id;\n+        // $administrateurId = auth()->user()->id;\n         $admin = Auth::guard('admin')->user()->id;\n     \n         // Filtrer les classes associées à cet administrateur\n-        $classes = Classe::where('administrateur_id', $administrateurId)\n+        $classes = Classe::where('administrateur_id',   $admin)\n                          ->where('is_delete', false)\n                          ->get();\n     \n         return view('Administrateur.Classe.listDesClasses', compact('classes'));\n"
                },
                {
                    "date": 1733227525810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,13 +26,9 @@\n      * Display a listing of the resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n      */\n-    // public function index()\n-    // {\n-    //     $classes = Classe::where('is_delete', false)->get();\n-    //     return view('Administrateur.Classe.listDesClasses', compact('classes'));\n-    // }\n+  \n \n     public function index()\n     {\n         // Récupérer l'administrateur connecté\n"
                },
                {
                    "date": 1733227540772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,14 +26,10 @@\n      * Display a listing of the resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n      */\n-  \n-\n     public function index()\n     {\n-        // Récupérer l'administrateur connecté\n-        // $administrateurId = auth()->user()->id;\n         $admin = Auth::guard('admin')->user()->id;\n     \n         // Filtrer les classes associées à cet administrateur\n         $classes = Classe::where('administrateur_id',   $admin)\n"
                },
                {
                    "date": 1733227552082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,13 +30,12 @@\n     public function index()\n     {\n         $admin = Auth::guard('admin')->user()->id;\n     \n-        // Filtrer les classes associées à cet administrateur\n+        // Filtrer les classes associées à cet \n         $classes = Classe::where('administrateur_id',   $admin)\n                          ->where('is_delete', false)\n                          ->get();\n-    \n         return view('Administrateur.Classe.listDesClasses', compact('classes'));\n     }\n     \n \n"
                },
                {
                    "date": 1733227558676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,8 @@\n      */\n     public function index()\n     {\n         $admin = Auth::guard('admin')->user()->id;\n-    \n-        // Filtrer les classes associées à cet \n         $classes = Classe::where('administrateur_id',   $admin)\n                          ->where('is_delete', false)\n                          ->get();\n         return view('Administrateur.Classe.listDesClasses', compact('classes'));\n"
                },
                {
                    "date": 1733227564304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,8 @@\n                          ->where('is_delete', false)\n                          ->get();\n         return view('Administrateur.Classe.listDesClasses', compact('classes'));\n     }\n-    \n-\n     /**\n      * Show the form for creating a new resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n"
                },
                {
                    "date": 1733227754817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,60 +220,9 @@\n     $classe = Classe::findOrFail($id);\n     $eleves = Eleves::all();\n     return view('Administrateur.assign-eleves', compact('classe', 'eleve'));\n }\n-// public function storeAssignedStudents(Request $request, $id)\n-// {\n-//     $classe = Classe::findOrFail($id);\n-//     $validatedData = $request->validate([\n-//         'eleve_ids' => 'required|array',\n-//         'eleve_ids.*' => 'exists:eleves,id',\n-//     ]);\n \n-//     $errors = [];  // Pour collecter les erreurs\n-//     $success = []; // Pour collecter les succès\n-\n-//     foreach ($validatedData['eleve_ids'] as $eleveId) {\n-//         $eleve = Eleves::findOrFail($eleveId);\n-        \n-//         // Vérifier si l'élève est déjà affecté à la classe\n-//         $affectationExistante = DB::table('classe_eleve')\n-//             ->where('eleve_id', $eleveId)\n-//             ->where('classe_id', $classe->id)\n-//             ->first();\n-        \n-//         if ($affectationExistante) {\n-//             $errors[] = \"L'élève Numéro {$eleve->prenoms} {$eleve->nom} est déjà affecté à cette classe. Veuillez d'abord le retirer avant de l'affecter à nouveau.\";\n-//             continue;  \n-//         }\n-\n-//         // Affecter l'élève à la classe\n-//         $classe->eleve()->save($eleve);\n-//         $success[] = \"L'élève Numéro {$eleve->prenoms} {$eleve->nom} a été affecté avec succès à la classe.\";\n-\n-//         // Envoyer un email au tuteur de l'élève\n-//         if ($eleve->email_tuteur && filter_var($eleve->email_tuteur, FILTER_VALIDATE_EMAIL)) {\n-//             try {\n-//                 Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n-//             } catch (\\Exception $e) {\n-//                 Log::error('Erreur lors de l\\'envoi de l\\'email pour l\\'élève  ' . $eleve->prenoms.  $eleve->nom . ' : ' . $e->getMessage());\n-//             }\n-//         } else {\n-//             Log::warning('Email tuteur non valide ou absent pour l\\'élèveD : ' . $eleve->prenoms .$eleve->nom);\n-//         }\n-//     }\n-\n-//     // Affichage des messages d'erreur et de succès\n-//     if (!empty($errors)) {\n-//         session()->flash('error', implode('<br>', $errors));\n-//     }\n-\n-//     if (!empty($success)) {\n-//         session()->flash('success', implode('<br>', $success));\n-//     }\n-\n-//     return redirect()->route('classes.index', $classe->id);\n-// }\n public function storeAssignedStudents(Request $request, $id)\n {\n     $classe = Classe::findOrFail($id);  // Récupère la classe\n     $validatedData = $request->validate([\n"
                },
                {
                    "date": 1733227761650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,12 +220,11 @@\n     $classe = Classe::findOrFail($id);\n     $eleves = Eleves::all();\n     return view('Administrateur.assign-eleves', compact('classe', 'eleve'));\n }\n-\n public function storeAssignedStudents(Request $request, $id)\n {\n-    $classe = Classe::findOrFail($id);  // Récupère la classe\n+    $classe = Classe::findOrFail($id);  \n     $validatedData = $request->validate([\n         'eleve_ids' => 'required|array',  // Validation des élèves à affecter\n         'eleve_ids.*' => 'exists:eleves,id',  // Vérification de l'existence des IDs des élèves\n     ]);\n"
                },
                {
                    "date": 1733227769635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,10 +224,10 @@\n public function storeAssignedStudents(Request $request, $id)\n {\n     $classe = Classe::findOrFail($id);  \n     $validatedData = $request->validate([\n-        'eleve_ids' => 'required|array',  // Validation des élèves à affecter\n-        'eleve_ids.*' => 'exists:eleves,id',  // Vérification de l'existence des IDs des élèves\n+        'eleve_ids' => 'required|array', \n+        'eleve_ids.*' => 'exists:eleves,id', \n     ]);\n \n     $errors = [];  // Liste pour collecter les erreurs\n     $success = []; // Liste pour collecter les succès\n"
                },
                {
                    "date": 1733227778217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,10 +228,10 @@\n         'eleve_ids' => 'required|array', \n         'eleve_ids.*' => 'exists:eleves,id', \n     ]);\n \n-    $errors = [];  // Liste pour collecter les erreurs\n-    $success = []; // Liste pour collecter les succès\n+    $errors = [];  \n+    $success = []; \n \n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n         $eleve = Eleves::findOrFail($eleveId);  // Récupère l'élève à partir de son ID\n         \n"
                },
                {
                    "date": 1733228158120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,14 +39,14 @@\n      * Show the form for creating a new resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n      */\n-    public function create()\n-    {\n-        $etablissements = Etablissement::all();\n+    // public function create()\n+    // {\n+    //     $etablissements = Etablissement::all();\n \n-        return view('Administrateur.Classe.formulaireAjoutClasse', compact('etablissements'));\n-    }\n+    //     return view('Administrateur.Classe.formulaireAjoutClasse', compact('etablissements'));\n+    // }\n \n     /**\n      * Store a newly created resource in storage.\n      *\n@@ -232,9 +232,9 @@\n     $errors = [];  \n     $success = []; \n \n     foreach ($validatedData['eleve_ids'] as $eleveId) {\n-        $eleve = Eleves::findOrFail($eleveId);  // Récupère l'élève à partir de son ID\n+        $eleve = Eleves::findOrFail($eleveId);  \n         \n         // Vérifier si l'élève est déjà affecté à la classe\n         if ($eleve->classe_id && $eleve->classe_id == $classe->id) {\n             // Si l'élève est déjà affecté à cette classe, on ajoute une erreur\n"
                },
                {
                    "date": 1733228446848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,17 @@\n     //     $etablissements = Etablissement::all();\n \n     //     return view('Administrateur.Classe.formulaireAjoutClasse', compact('etablissements'));\n     // }\n+    public function create()\n+{\n+    // Obtenir les établissements liés à l'administrateur connecté\n+    $etablissements = Etablissement::where('administrateur_id', auth('admin')->id())->get();\n \n+    return view('Administrateur.Classe.formulaireAjoutClasse', compact('etablissements'));\n+}\n+\n+\n     /**\n      * Store a newly created resource in storage.\n      *\n      * @param  \\Illuminate\\Http\\Request  $request\n"
                },
                {
                    "date": 1733228551028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,21 +60,21 @@\n      *\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @return \\Illuminate\\Http\\Response\n      */\n-    public function store(Request $request)\n-{    \n-    // Validation des données du formulaire\n-    $validatedData = $request->validate([\n-        'nom' => 'required|string|max:255',\n-        'niveau' => 'required|string|max:255',\n-        'etablissement_id' => 'required|exists:etablissements,id',\n+//     public function store(Request $request)\n+// {    \n+//     // Validation des données du formulaire\n+//     $validatedData = $request->validate([\n+//         'nom' => 'required|string|max:255',\n+//         'niveau' => 'required|string|max:255',\n+//         'etablissement_id' => 'required|exists:etablissements,id',\n      \n-    ]);\n-    $validatedData['administrateur_id'] = auth('admin')->id();\n-    Classe::create($validatedData);\n-    return redirect()->route('classes.index')->with('success', 'Classe créée avec succès.');\n-}\n+//     ]);\n+//     $validatedData['administrateur_id'] = auth('admin')->id();\n+//     Classe::create($validatedData);\n+//     return redirect()->route('classes.index')->with('success', 'Classe créée avec succès.');\n+// }\n     /**\n      * Display the specified resource.\n      *\n      * @param  \\App\\Models\\Classe  $classe\n"
                },
                {
                    "date": 1733228558865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,33 @@\n //     $validatedData['administrateur_id'] = auth('admin')->id();\n //     Classe::create($validatedData);\n //     return redirect()->route('classes.index')->with('success', 'Classe créée avec succès.');\n // }\n+public function store(Request $request)\n+{\n+    // Validation des données du formulaire\n+    $validatedData = $request->validate([\n+        'nom' => 'required|string|max:255',\n+        'niveau' => 'required|string|max:255',\n+        'etablissement_id' => 'required|exists:etablissements,id',\n+    ]);\n+\n+    // Vérifier que l'établissement appartient à l'administrateur connecté\n+    $etablissement = Etablissement::where('id', $validatedData['etablissement_id'])\n+                                   ->where('administrateur_id', auth('admin')->id())\n+                                   ->first();\n+\n+    if (!$etablissement) {\n+        return redirect()->back()->withErrors(['etablissement_id' => 'Vous ne pouvez sélectionner que vos propres établissements.']);\n+    }\n+\n+    // Associer la classe à l'administrateur\n+    $validatedData['administrateur_id'] = auth('admin')->id();\n+    Classe::create($validatedData);\n+\n+    return redirect()->route('classes.index')->with('success', 'Classe créée avec succès.');\n+}\n+\n     /**\n      * Display the specified resource.\n      *\n      * @param  \\App\\Models\\Classe  $classe\n"
                },
                {
                    "date": 1733228565144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,8 @@\n //     return redirect()->route('classes.index')->with('success', 'Classe créée avec succès.');\n // }\n public function store(Request $request)\n {\n-    // Validation des données du formulaire\n     $validatedData = $request->validate([\n         'nom' => 'required|string|max:255',\n         'niveau' => 'required|string|max:255',\n         'etablissement_id' => 'required|exists:etablissements,id',\n"
                },
                {
                    "date": 1733228570260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,8 @@\n         'niveau' => 'required|string|max:255',\n         'etablissement_id' => 'required|exists:etablissements,id',\n     ]);\n \n-    // Vérifier que l'établissement appartient à l'administrateur connecté\n     $etablissement = Etablissement::where('id', $validatedData['etablissement_id'])\n                                    ->where('administrateur_id', auth('admin')->id())\n                                    ->first();\n \n"
                },
                {
                    "date": 1733228581814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,13 +80,11 @@\n         'nom' => 'required|string|max:255',\n         'niveau' => 'required|string|max:255',\n         'etablissement_id' => 'required|exists:etablissements,id',\n     ]);\n-\n     $etablissement = Etablissement::where('id', $validatedData['etablissement_id'])\n                                    ->where('administrateur_id', auth('admin')->id())\n                                    ->first();\n-\n     if (!$etablissement) {\n         return redirect()->back()->withErrors(['etablissement_id' => 'Vous ne pouvez sélectionner que vos propres établissements.']);\n     }\n \n"
                },
                {
                    "date": 1733228589643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,8 @@\n                                    ->first();\n     if (!$etablissement) {\n         return redirect()->back()->withErrors(['etablissement_id' => 'Vous ne pouvez sélectionner que vos propres établissements.']);\n     }\n-\n     // Associer la classe à l'administrateur\n     $validatedData['administrateur_id'] = auth('admin')->id();\n     Classe::create($validatedData);\n \n"
                },
                {
                    "date": 1733323141437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,12 +86,10 @@\n                                    ->first();\n     if (!$etablissement) {\n         return redirect()->back()->withErrors(['etablissement_id' => 'Vous ne pouvez sélectionner que vos propres établissements.']);\n     }\n-    // Associer la classe à l'administrateur\n     $validatedData['administrateur_id'] = auth('admin')->id();\n     Classe::create($validatedData);\n-\n     return redirect()->route('classes.index')->with('success', 'Classe créée avec succès.');\n }\n \n     /**\n@@ -245,9 +243,9 @@\n \n public function assignStudents($id)\n {\n     $classe = Classe::findOrFail($id);\n-    $eleves = Eleves::all();\n+    $eleve = Eleves::all();\n     return view('Administrateur.assign-eleves', compact('classe', 'eleve'));\n }\n public function storeAssignedStudents(Request $request, $id)\n {\n"
                }
            ],
            "date": 1731319650381,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Cours;\nuse App\\Models\\Classe;\nuse App\\Models\\Eleves;\nuse App\\Models\\Professeur;\nuse Illuminate\\Http\\Request;\n\nuse App\\Models\\Etablissement;\nuse App\\Mail\\EmploiDuTempsMail;\nuse Illuminate\\Support\\Facades\\DB;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Mail;\nuse App\\Mail\\ProfessorAssignedNotification;\nuse App\\Mail\\ProfessorDetachedNotification;\n\nclass ClasseController extends Controller\n{\n\n\n    public function __construct()\n{\n    $this->middleware('auth:admin');\n\n}\n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index()\n    {\n        $classes = Classe::where('is_delete', false)->get();\n        return view('Administrateur.Classe.listDesClasses', compact('classes'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create()\n    {\n        $etablissements = Etablissement::all();\n\n        return view('Administrateur.Classe.formulaireAjoutClasse', compact('etablissements'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n{    \n    // Validation des données du formulaire\n    $validatedData = $request->validate([\n        'nom' => 'required|string|max:255',\n        'niveau' => 'required|string|max:255',\n        'etablissement_id' => 'required|exists:etablissements,id',\n     \n    ]);\n    $validatedData['administrateur_id'] = auth('admin')->id();\n    Classe::create($validatedData);\n    return redirect()->route('classes.index')->with('success', 'Classe créée avec succès.');\n}\n\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  \\App\\Models\\Classe  $classe\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show($id)\n    {\n        $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n        $eleve = Eleves::whereNull('classe_id')->get();\n        \n        $professeursAssignes = $classe->professeurs;\n        return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n    }\n    /**\n     * Show the form for editing the specified resource.\n     *\n     * @param  \\App\\Models\\Classe  $classe\n     * @return \\Illuminate\\Http\\Response\n     */\n  \n     public function edit($id)\n     {\n        $classe = Classe::findOrFail($id);\n       return view('Administrateur.Classe.modifierClasses', compact('classe'));\n     }\n     \n\n\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\App\\Models\\Classe  $classe\n     * @return \\Illuminate\\Http\\Response\n     */\n   // ClasseController.php\n\npublic function update(Request $request, $id)\n{\n    $classe = Classe::findOrFail($id);\n\n    $request->validate([\n        'nom' => 'required|string|max:255',\n        'niveau' => 'required|string|max:255',\n    ]);\n\n    $classe->update($request->only(['nom', 'niveau']));\n\n    return redirect()->route('classes.index')->with('success', 'Classe mise à jour avec succès.');\n}\n\n\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param  \\App\\Models\\Classe  $classe\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy($id)\n{\n    $classe = Classe::findOrFail($id);\n\n    if ($classe->administrateur_id !== auth('admin')->id()) {\n        return redirect()->route('classes.index')->with('error', 'Vous n\\'êtes pas autorisé à supprimer cette classe.');\n    }\n    \n    $classe->is_delete = true;\n    $classe->save();\n\n    return redirect()->route('classes.index')->with('success', 'Classe supprimée avec succès.');\n}\n\npublic function assignTeachers($id)\n{\n\n    $classe = Classe::findOrFail($id);\n    $professeurs = Professeur::all();\n    return view('Administrateur.assign-professeurs', compact('classe', 'professeurs'));\n}\n\npublic function storeAssignedTeacher(Request $request, $id)\n{\n    $validatedData = $request->validate([\n        'professeur_ids' => 'required|array',\n        'professeur_ids.*' => 'exists:professeurs,id',\n    ]);\n\n    $classe = Classe::findOrFail($id);\n     // Récupérer le nom de l'établissement associé à la classe\n     $etablissementName = $classe->etablissement->nom;\n    // Attacher les professeurs à la classe\n    foreach ($validatedData['professeur_ids'] as $professeurId) {\n        DB::table('classe_professeur')->insert([\n            'classe_id' => $classe->id,\n            'professeur_id' => $professeurId,\n            'created_at' => now(),\n            'updated_at' => now(),\n        ]);\n    }\n\n    $professeur = Auth::user()->professeur;\n\n            if ($professeur && $professeur->email) {\n            Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n        } else {\n            // Gérer le cas où le professeur n'a pas d'email\n            return redirect()->route('classes.index')->with('error', 'Le professeur n\\'a pas d\\'email.');\n        }\n\n\n    return redirect()->route('classes.index')->with('success', 'Professeurs assignés avec succès à la classe.');\n}\n\n\npublic function assignStudents($id)\n{\n    $classe = Classe::findOrFail($id);\n    $eleves = Eleves::all();\n    return view('Administrateur.assign-eleves', compact('classe', 'eleves'));\n}\npublic function storeAssignedStudents(Request $request, $id)\n{\n    $classe = Classe::findOrFail($id);\n    $validatedData = $request->validate([\n        'eleve_ids' => 'required|array',\n        'eleve_ids.*' => 'exists:eleves,id', \n    ]);\n    \n    foreach ($validatedData['eleve_ids'] as $eleveId) {\n        $eleve = Eleves::findOrFail($eleveId);\n        $classe->eleve()->save($eleve);\n    }\n\n       // Envoyer l'email\n       Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n    return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n}\n\n\npublic function detachProfesseurFromClasse($classeId, $professeurId)\n{\n    $classe = Classe::find($classeId);\n    $professeur = Professeur::find($professeurId);\n\n    if (!$classe || !$professeur) {\n        return redirect()->route('admin.classes.index')->with('error', 'Classe ou Professeur non trouvé.');\n    }\n\n    $classe->professeurs()->detach($professeur->id);\n\n    $etablissementName = $classe->etablissement->nom ?? 'Nom de l\\'établissement par défaut';\n\n    // Envoyer une notification par email au professeur\n    if ($professeur && $professeur->email) {\n        Mail::to($professeur->email)->send(new ProfessorDetachedNotification($classe->nom, $etablissementName));\n    }\n\n    return redirect()->route('classes.index')->with('success', 'Professeur retiré de la classe avec succès.');\n}\n\n\npublic function detachEleveClasse($classeId, $eleveId)\n{\n    $classe = Classe::find($classeId);\n    $eleve = Eleves::find($eleveId);\n\n    if (!$eleve) {\n        return redirect()->route('classes.index')->with('error', 'Élève non trouvé.');\n    }\n    if ($eleve->classe_id == $classeId) {\n        $eleve->classe_id = null;\n        $eleve->save();\n        return redirect()->route('classes.index')->with('success', 'Élève retiré de la classe avec succès.');\n    } else {\n        return redirect()->route('classes.index')->with('error', 'Élève n\\'est pas associé à cette classe.');\n    }\n}\n\npublic function manageProfessors($classeId)\n{\n    $classe = Classe::findOrFail($classeId);\n    $professeurs = $classe->professeurs;\n    return view('Administrateur.Classe.manageProfessors', compact('classe', 'professeurs'));\n}\n\npublic function manageEleves($classeId)\n{\n    $classe = Classe::findOrFail($classeId);\n    $eleves = $classe->eleve;\n    // dd($eleves);\n    return view('Administrateur.Classe.manageEleves', compact('classe', 'eleves'));\n}\n\n\n}\n\n"
        }
    ]
}