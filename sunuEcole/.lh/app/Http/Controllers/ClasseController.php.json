{
    "sourceFile": "app/Http/Controllers/ClasseController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1731319650381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731319672355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,16 +74,16 @@\n      *\n      * @param  \\App\\Models\\Classe  $classe\n      * @return \\Illuminate\\Http\\Response\n      */\n-    public function show($id)\n-    {\n-        $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n-        $eleve = Eleves::whereNull('classe_id')->get();\n-        \n-        $professeursAssignes = $classe->professeurs;\n-        return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n-    }\n+    // public function show($id)\n+    // {\n+    //     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n+    //     $eleve = Eleves::whereNull('classe_id')->get();\n+\n+    //     $professeursAssignes = $classe->professeurs;\n+    //     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n+    // }\n     /**\n      * Show the form for editing the specified resource.\n      *\n      * @param  \\App\\Models\\Classe  $classe\n"
                },
                {
                    "date": 1731319701052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,18 @@\n \n     //     $professeursAssignes = $classe->professeurs;\n     //     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n     // }\n+    public function show($id)\n+{\n+    $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n+    $this->authorize('view', $classe); // Vérifie l'autorisation\n+    $eleve = Eleves::whereNull('classe_id')->get();\n+    $professeursAssignes = $classe->professeurs;\n+\n+    return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n+}\n+\n     /**\n      * Show the form for editing the specified resource.\n      *\n      * @param  \\App\\Models\\Classe  $classe\n"
                },
                {
                    "date": 1731319733746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,8 +88,9 @@\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n+    \n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731319738872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-    \n+    dd()\n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731319745684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-    dd()\n+    dd($professeursAssignes)\n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731319767028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n     // }\n     public function show($id)\n {\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n-    $this->authorize('view', $classe); // Vérifie l'autorisation\n+    // $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n     dd($professeursAssignes)\n \n"
                },
                {
                    "date": 1731319794893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     // $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-    dd($professeursAssignes)\n+    dd($professeursAssignes);\n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731319873356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,13 @@\n class ClasseController extends Controller\n {\n \n \n-    public function __construct()\n-{\n-    $this->middleware('auth:admin');\n+//     public function __construct()\n+// {\n+//     $this->middleware('auth:admin');\n \n-}\n+// }\n     /**\n      * Display a listing of the resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n"
                },
                {
                    "date": 1731319908050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,13 @@\n class ClasseController extends Controller\n {\n \n \n-//     public function __construct()\n-// {\n-//     $this->middleware('auth:admin');\n+    public function __construct()\n+{\n+    $this->middleware('auth:admin');\n \n-// }\n+}\n     /**\n      * Display a listing of the resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n"
                },
                {
                    "date": 1731319918828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,13 +18,11 @@\n \n class ClasseController extends Controller\n {\n \n-\n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-\n }\n     /**\n      * Display a listing of the resource.\n      *\n"
                },
                {
                    "date": 1731319992654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n     // }\n     public function show($id)\n {\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n-    // $this->authorize('view', $classe); // Vérifie l'autorisation\n+    $this->authorize('view', $classe); // Vérifie l'autorisation\n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n     dd($professeursAssignes);\n \n"
                },
                {
                    "date": 1731320465530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,12 +83,12 @@\n     // }\n     public function show($id)\n {\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n-    $this->authorize('view', $classe); // Vérifie l'autorisation\n+    $this->authorize('view', $classe); \n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-    dd($professeursAssignes);\n+    // dd($professeursAssignes);\n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731320472961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,8 @@\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     $this->authorize('view', $classe); \n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-    // dd($professeursAssignes);\n \n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n"
                },
                {
                    "date": 1731320482388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,23 +72,15 @@\n      *\n      * @param  \\App\\Models\\Classe  $classe\n      * @return \\Illuminate\\Http\\Response\n      */\n-    // public function show($id)\n-    // {\n-    //     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n-    //     $eleve = Eleves::whereNull('classe_id')->get();\n-\n-    //     $professeursAssignes = $classe->professeurs;\n-    //     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n-    // }\n+  \n     public function show($id)\n {\n     $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n     $this->authorize('view', $classe); \n     $eleve = Eleves::whereNull('classe_id')->get();\n     $professeursAssignes = $classe->professeurs;\n-\n     return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n }\n \n     /**\n"
                },
                {
                    "date": 1731320498723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,10 +64,8 @@\n     $validatedData['administrateur_id'] = auth('admin')->id();\n     Classe::create($validatedData);\n     return redirect()->route('classes.index')->with('success', 'Classe créée avec succès.');\n }\n-\n-\n     /**\n      * Display the specified resource.\n      *\n      * @param  \\App\\Models\\Classe  $classe\n"
                },
                {
                    "date": 1731320506936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n use App\\Models\\Classe;\n use App\\Models\\Eleves;\n use App\\Models\\Professeur;\n use Illuminate\\Http\\Request;\n-\n use App\\Models\\Etablissement;\n use App\\Mail\\EmploiDuTempsMail;\n use Illuminate\\Support\\Facades\\DB;\n use Illuminate\\Support\\Facades\\Auth;\n"
                },
                {
                    "date": 1731327499859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n <?php\n-\n namespace App\\Http\\Controllers;\n-\n use App\\Models\\Cours;\n use App\\Models\\Classe;\n use App\\Models\\Eleves;\n use App\\Models\\Professeur;\n@@ -20,8 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n+    \n }\n     /**\n      * Display a listing of the resource.\n      *\n"
                },
                {
                    "date": 1731327507378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    \n+    $this\n+\n }\n     /**\n      * Display a listing of the resource.\n      *\n"
                },
                {
                    "date": 1731327513284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this\n+    $this->au\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327519770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->au\n+    $this->is\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327531067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->is\n+    $this->isAuthorize()\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327537590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->isAuthorize()\n+    $this->isAuthorize();\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327543958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->isAuthorize();\n+    $this->isAuthorize(Cour::);\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327552469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->isAuthorize(Cour::);\n+    $this->isAuthorize(Cours::class);\n \n }\n     /**\n      * Display a listing of the resource.\n"
                },
                {
                    "date": 1731327603598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,8 @@\n \n     public function __construct()\n {\n     $this->middleware('auth:admin');\n-    $this->isAuthorize(Cours::class);\n \n }\n     /**\n      * Display a listing of the resource.\n"
                }
            ],
            "date": 1731319650381,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Cours;\nuse App\\Models\\Classe;\nuse App\\Models\\Eleves;\nuse App\\Models\\Professeur;\nuse Illuminate\\Http\\Request;\n\nuse App\\Models\\Etablissement;\nuse App\\Mail\\EmploiDuTempsMail;\nuse Illuminate\\Support\\Facades\\DB;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Mail;\nuse App\\Mail\\ProfessorAssignedNotification;\nuse App\\Mail\\ProfessorDetachedNotification;\n\nclass ClasseController extends Controller\n{\n\n\n    public function __construct()\n{\n    $this->middleware('auth:admin');\n\n}\n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index()\n    {\n        $classes = Classe::where('is_delete', false)->get();\n        return view('Administrateur.Classe.listDesClasses', compact('classes'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create()\n    {\n        $etablissements = Etablissement::all();\n\n        return view('Administrateur.Classe.formulaireAjoutClasse', compact('etablissements'));\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n{    \n    // Validation des données du formulaire\n    $validatedData = $request->validate([\n        'nom' => 'required|string|max:255',\n        'niveau' => 'required|string|max:255',\n        'etablissement_id' => 'required|exists:etablissements,id',\n     \n    ]);\n    $validatedData['administrateur_id'] = auth('admin')->id();\n    Classe::create($validatedData);\n    return redirect()->route('classes.index')->with('success', 'Classe créée avec succès.');\n}\n\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  \\App\\Models\\Classe  $classe\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show($id)\n    {\n        $classe = Classe::with(['eleve', 'professeurs', 'emploisDuTemps'])->findOrFail($id);\n        $eleve = Eleves::whereNull('classe_id')->get();\n        \n        $professeursAssignes = $classe->professeurs;\n        return view('Administrateur.Classe.classesDetail', compact('classe','professeursAssignes','eleve'));\n    }\n    /**\n     * Show the form for editing the specified resource.\n     *\n     * @param  \\App\\Models\\Classe  $classe\n     * @return \\Illuminate\\Http\\Response\n     */\n  \n     public function edit($id)\n     {\n        $classe = Classe::findOrFail($id);\n       return view('Administrateur.Classe.modifierClasses', compact('classe'));\n     }\n     \n\n\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\App\\Models\\Classe  $classe\n     * @return \\Illuminate\\Http\\Response\n     */\n   // ClasseController.php\n\npublic function update(Request $request, $id)\n{\n    $classe = Classe::findOrFail($id);\n\n    $request->validate([\n        'nom' => 'required|string|max:255',\n        'niveau' => 'required|string|max:255',\n    ]);\n\n    $classe->update($request->only(['nom', 'niveau']));\n\n    return redirect()->route('classes.index')->with('success', 'Classe mise à jour avec succès.');\n}\n\n\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param  \\App\\Models\\Classe  $classe\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy($id)\n{\n    $classe = Classe::findOrFail($id);\n\n    if ($classe->administrateur_id !== auth('admin')->id()) {\n        return redirect()->route('classes.index')->with('error', 'Vous n\\'êtes pas autorisé à supprimer cette classe.');\n    }\n    \n    $classe->is_delete = true;\n    $classe->save();\n\n    return redirect()->route('classes.index')->with('success', 'Classe supprimée avec succès.');\n}\n\npublic function assignTeachers($id)\n{\n\n    $classe = Classe::findOrFail($id);\n    $professeurs = Professeur::all();\n    return view('Administrateur.assign-professeurs', compact('classe', 'professeurs'));\n}\n\npublic function storeAssignedTeacher(Request $request, $id)\n{\n    $validatedData = $request->validate([\n        'professeur_ids' => 'required|array',\n        'professeur_ids.*' => 'exists:professeurs,id',\n    ]);\n\n    $classe = Classe::findOrFail($id);\n     // Récupérer le nom de l'établissement associé à la classe\n     $etablissementName = $classe->etablissement->nom;\n    // Attacher les professeurs à la classe\n    foreach ($validatedData['professeur_ids'] as $professeurId) {\n        DB::table('classe_professeur')->insert([\n            'classe_id' => $classe->id,\n            'professeur_id' => $professeurId,\n            'created_at' => now(),\n            'updated_at' => now(),\n        ]);\n    }\n\n    $professeur = Auth::user()->professeur;\n\n            if ($professeur && $professeur->email) {\n            Mail::to($professeur->email)->send(new ProfessorAssignedNotification($classe->nom, $etablissementName));\n        } else {\n            // Gérer le cas où le professeur n'a pas d'email\n            return redirect()->route('classes.index')->with('error', 'Le professeur n\\'a pas d\\'email.');\n        }\n\n\n    return redirect()->route('classes.index')->with('success', 'Professeurs assignés avec succès à la classe.');\n}\n\n\npublic function assignStudents($id)\n{\n    $classe = Classe::findOrFail($id);\n    $eleves = Eleves::all();\n    return view('Administrateur.assign-eleves', compact('classe', 'eleves'));\n}\npublic function storeAssignedStudents(Request $request, $id)\n{\n    $classe = Classe::findOrFail($id);\n    $validatedData = $request->validate([\n        'eleve_ids' => 'required|array',\n        'eleve_ids.*' => 'exists:eleves,id', \n    ]);\n    \n    foreach ($validatedData['eleve_ids'] as $eleveId) {\n        $eleve = Eleves::findOrFail($eleveId);\n        $classe->eleve()->save($eleve);\n    }\n\n       // Envoyer l'email\n       Mail::to($eleve->email_tuteur)->send(new EmploiDuTempsMail($eleve));\n    return redirect()->route('classes.index', $classe->id)->with('success', 'Élèves assignés avec succès à la classe.');\n}\n\n\npublic function detachProfesseurFromClasse($classeId, $professeurId)\n{\n    $classe = Classe::find($classeId);\n    $professeur = Professeur::find($professeurId);\n\n    if (!$classe || !$professeur) {\n        return redirect()->route('admin.classes.index')->with('error', 'Classe ou Professeur non trouvé.');\n    }\n\n    $classe->professeurs()->detach($professeur->id);\n\n    $etablissementName = $classe->etablissement->nom ?? 'Nom de l\\'établissement par défaut';\n\n    // Envoyer une notification par email au professeur\n    if ($professeur && $professeur->email) {\n        Mail::to($professeur->email)->send(new ProfessorDetachedNotification($classe->nom, $etablissementName));\n    }\n\n    return redirect()->route('classes.index')->with('success', 'Professeur retiré de la classe avec succès.');\n}\n\n\npublic function detachEleveClasse($classeId, $eleveId)\n{\n    $classe = Classe::find($classeId);\n    $eleve = Eleves::find($eleveId);\n\n    if (!$eleve) {\n        return redirect()->route('classes.index')->with('error', 'Élève non trouvé.');\n    }\n    if ($eleve->classe_id == $classeId) {\n        $eleve->classe_id = null;\n        $eleve->save();\n        return redirect()->route('classes.index')->with('success', 'Élève retiré de la classe avec succès.');\n    } else {\n        return redirect()->route('classes.index')->with('error', 'Élève n\\'est pas associé à cette classe.');\n    }\n}\n\npublic function manageProfessors($classeId)\n{\n    $classe = Classe::findOrFail($classeId);\n    $professeurs = $classe->professeurs;\n    return view('Administrateur.Classe.manageProfessors', compact('classe', 'professeurs'));\n}\n\npublic function manageEleves($classeId)\n{\n    $classe = Classe::findOrFail($classeId);\n    $eleves = $classe->eleve;\n    // dd($eleves);\n    return view('Administrateur.Classe.manageEleves', compact('classe', 'eleves'));\n}\n\n\n}\n\n"
        }
    ]
}