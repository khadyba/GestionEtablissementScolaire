{
    "sourceFile": "app/Http/Controllers/ElevesCoursController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 33,
            "patches": [
                {
                    "date": 1731407594830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731407603337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,17 +38,16 @@\n         $evaluations = Evaluations::where('classe_id', $classeId)->get();\n         return view('Eleves.Evaluations.listEvaluation', compact('classe', 'evaluations'));\n     }\n \n-    \n+\n     public function listNotes()\n     {\n         $user = auth()->user();\n     \n         if (!$user->eleve) {\n             return redirect()->route('eleves.dashboard')->withErrors('Aucune relation élève trouvée pour cet utilisateur.');\n         }\n-    \n         $eleve = $user->eleve;\n         $classe = $eleve->classe;\n         $notes = Notes::where('eleve_id', $eleve->id)->get();\n     \n"
                },
                {
                    "date": 1731407617718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n     {\n         \n         $classe = Classe::findOrFail($id);\n         $cours = Cours::where('classe_id', $id)->get();\n-        // $classe= $cours->classe->id;\n         return view('Eleves.classes.cours', compact('classe','cours'));\n     }\n \n \n"
                },
                {
                    "date": 1731407812900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n         $classe = Classe::findOrFail($id);\n         $eleve = auth()->user()->eleve;\n         \n         if ($eleve->classe_id !== $classe->id) {\n-            return back()->withErrors(['error' => 'Vous n\\'êtes pas autorisé à accéder à cette classe.']);\n+            return redirect()->back()->withErrors(['error' => 'Vous n\\'êtes pas autorisé à accéder à cette classe.']);\n         }\n         return view('Eleves.classes.detail', compact('classe'));\n     }\n \n"
                },
                {
                    "date": 1731407850807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,8 +88,9 @@\n         \n         if ($eleve->classe_id !== $classe->id) {\n             return redirect()->back()->withErrors(['error' => 'Vous n\\'êtes pas autorisé à accéder à cette classe.']);\n         }\n+        \n         return view('Eleves.classes.detail', compact('classe'));\n     }\n \n     public function detailCours($id)\n"
                },
                {
                    "date": 1731408820882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,20 +80,20 @@\n      *\n      * @param  \\App\\Models\\ElevesCours  $elevesCours\n      * @return \\Illuminate\\Http\\Response\n      */\n-    public function show($id)\n-    {\n-        $classe = Classe::findOrFail($id);\n-        $eleve = auth()->user()->eleve;\n+    // public function show($id)\n+    // {\n+    //     $classe = Classe::findOrFail($id);\n+    //     $eleve = auth()->user()->eleve;\n         \n-        if ($eleve->classe_id !== $classe->id) {\n-            return redirect()->back()->withErrors(['error' => 'Vous n\\'êtes pas autorisé à accéder à cette classe.']);\n-        }\n-        \n-        return view('Eleves.classes.detail', compact('classe'));\n-    }\n+    //     if ($eleve->classe_id !== $classe->id) {\n+    //         return redirect()->back()->withErrors(['error' => 'Vous n\\'êtes pas autorisé à accéder à cette classe.']);\n+    //     }\n \n+    //     return view('Eleves.classes.detail', compact('classe'));\n+    // }\n+\n     public function detailCours($id)\n     {\n         $cours = Cours::findOrFail($id);\n         $classe= $cours->classe->id;\n"
                },
                {
                    "date": 1731408860475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,8 +92,21 @@\n \n     //     return view('Eleves.classes.detail', compact('classe'));\n     // }\n \n+            public function show($id)\n+        {\n+            $classe = Classe::findOrFail($id);\n+            $eleve = auth()->user()->eleve;\n+\n+            // Vérifier si l'élève est affecté à cette classe\n+            if (!$eleve || $eleve->classe_id !== $classe->id) {\n+                return redirect()->back()->with('error', 'Vous n\\'êtes pas autorisé à accéder à cette classe.');\n+            }\n+\n+            return view('Eleves.classes.detail', compact('classe'));\n+        }\n+\n     public function detailCours($id)\n     {\n         $cours = Cours::findOrFail($id);\n         $classe= $cours->classe->id;\n"
                },
                {
                    "date": 1731408869057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,10 +103,9 @@\n                 return redirect()->back()->with('error', 'Vous n\\'êtes pas autorisé à accéder à cette classe.');\n             }\n \n             return view('Eleves.classes.detail', compact('classe'));\n-        }\n-\n+    }\n     public function detailCours($id)\n     {\n         $cours = Cours::findOrFail($id);\n         $classe= $cours->classe->id;\n"
                },
                {
                    "date": 1731408874296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,10 +92,10 @@\n \n     //     return view('Eleves.classes.detail', compact('classe'));\n     // }\n \n-            public function show($id)\n-        {\n+    public function show($id)\n+     {\n             $classe = Classe::findOrFail($id);\n             $eleve = auth()->user()->eleve;\n \n             // Vérifier si l'élève est affecté à cette classe\n"
                },
                {
                    "date": 1731408880154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,20 +80,8 @@\n      *\n      * @param  \\App\\Models\\ElevesCours  $elevesCours\n      * @return \\Illuminate\\Http\\Response\n      */\n-    // public function show($id)\n-    // {\n-    //     $classe = Classe::findOrFail($id);\n-    //     $eleve = auth()->user()->eleve;\n-        \n-    //     if ($eleve->classe_id !== $classe->id) {\n-    //         return redirect()->back()->withErrors(['error' => 'Vous n\\'êtes pas autorisé à accéder à cette classe.']);\n-    //     }\n-\n-    //     return view('Eleves.classes.detail', compact('classe'));\n-    // }\n-\n     public function show($id)\n      {\n             $classe = Classe::findOrFail($id);\n             $eleve = auth()->user()->eleve;\n"
                },
                {
                    "date": 1731409207411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,14 +30,14 @@\n         return view('Eleves.classes.cours', compact('classe','cours'));\n     }\n \n \n-    public function listEvaluations($classeId)\n-    {\n-        $classe = Classe::findOrFail($classeId);\n-        $evaluations = Evaluations::where('classe_id', $classeId)->get();\n-        return view('Eleves.Evaluations.listEvaluation', compact('classe', 'evaluations'));\n-    }\n+    // public function listEvaluations($classeId)\n+    // {\n+    //     $classe = Classe::findOrFail($classeId);\n+    //     $evaluations = Evaluations::where('classe_id', $classeId)->get();\n+    //     return view('Eleves.Evaluations.listEvaluation', compact('classe', 'evaluations'));\n+    // }\n \n \n     public function listNotes()\n     {\n@@ -89,9 +89,8 @@\n             // Vérifier si l'élève est affecté à cette classe\n             if (!$eleve || $eleve->classe_id !== $classe->id) {\n                 return redirect()->back()->with('error', 'Vous n\\'êtes pas autorisé à accéder à cette classe.');\n             }\n-\n             return view('Eleves.classes.detail', compact('classe'));\n     }\n     public function detailCours($id)\n     {\n"
                },
                {
                    "date": 1731410559101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,22 +37,37 @@\n     //     $evaluations = Evaluations::where('classe_id', $classeId)->get();\n     //     return view('Eleves.Evaluations.listEvaluation', compact('classe', 'evaluations'));\n     // }\n \n-\n-    public function listNotes()\n+    public function listEvaluations($classeId)\n     {\n-        $user = auth()->user();\n+        $classe = Classe::findOrFail($classeId);\n+        $eleve = auth()->user()->eleve;\n     \n-        if (!$user->eleve) {\n-            return redirect()->route('eleves.dashboard')->withErrors('Aucune relation élève trouvée pour cet utilisateur.');\n+        // Vérifier si l'élève est affecté à la classe\n+        if (!$eleve || $eleve->classe_id !== $classe->id) {\n+            return redirect()->back()->with('error', 'Vous n\\'êtes pas autorisé à consulter les évaluations de cette classe.');\n         }\n-        $eleve = $user->eleve;\n-        $classe = $eleve->classe;\n-        $notes = Notes::where('eleve_id', $eleve->id)->get();\n     \n-        return view('Eleves.Evaluations.listNotes', compact('notes','classe','eleve'));\n+        // Si l'élève est affecté, récupérer les évaluations\n+        $evaluations = Evaluations::where('classe_id', $classeId)->get();\n+    \n+        return view('Eleves.Evaluations.listEvaluation', compact('classe', 'evaluations'));\n     }\n+    \n+    // public function listNotes()\n+    // {\n+    //     $user = auth()->user();\n+    \n+    //     if (!$user->eleve) {\n+    //         return redirect()->route('eleves.dashboard')->withErrors('Aucune relation élève trouvée pour cet utilisateur.');\n+    //     }\n+    //     $eleve = $user->eleve;\n+    //     $classe = $eleve->classe;\n+    //     $notes = Notes::where('eleve_id', $eleve->id)->get();\n+    \n+    //     return view('Eleves.Evaluations.listNotes', compact('notes','classe','eleve'));\n+    // }\n \n     \n     /**\n      * Show the form for creating a new resource.\n"
                },
                {
                    "date": 1731410639439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,30 @@\n     \n     //     return view('Eleves.Evaluations.listNotes', compact('notes','classe','eleve'));\n     // }\n \n-    \n+    public function listNotes()\n+{\n+    $user = auth()->user();\n+\n+    // Vérifier si l'utilisateur est bien un élève\n+    if (!$user->eleve) {\n+        return redirect()->route('eleves.dashboard')->withErrors('Aucune relation élève trouvée pour cet utilisateur.');\n+    }\n+\n+    $eleve = $user->eleve;\n+\n+    // Vérifier si l'élève est assigné à une classe\n+    if (!$eleve->classe) {\n+        return redirect()->route('eleves.dashboard')->with('Vous n\\'êtes assigné à aucune classe. Veuillez contacter l\\'administrateur.');\n+    }\n+\n+    $classe = $eleve->classe;\n+    $notes = Notes::where('eleve_id', $eleve->id)->get();\n+\n+    return view('Eleves.Evaluations.listNotes', compact('notes', 'classe', 'eleve'));\n+}\n+\n     /**\n      * Show the form for creating a new resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n"
                },
                {
                    "date": 1731410700444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n     $eleve = $user->eleve;\n \n     // Vérifier si l'élève est assigné à une classe\n     if (!$eleve->classe) {\n-        return redirect()->route('eleves.dashboard')->with('Vous n\\'êtes assigné à aucune classe. Veuillez contacter l\\'administrateur.');\n+        return redirect()->back()->withErrors('Vous n\\'êtes assigné à aucune classe. Veuillez contacter l\\'administrateur.');\n     }\n \n     $classe = $eleve->classe;\n     $notes = Notes::where('eleve_id', $eleve->id)->get();\n"
                },
                {
                    "date": 1731410726392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n     $eleve = $user->eleve;\n \n     // Vérifier si l'élève est assigné à une classe\n     if (!$eleve->classe) {\n-        return redirect()->back()->withErrors('Vous n\\'êtes assigné à aucune classe. Veuillez contacter l\\'administrateur.');\n+        return redirect()->back()->with('Vous n\\'êtes assigné à aucune classe. Veuillez contacter l\\'administrateur.');\n     }\n \n     $classe = $eleve->classe;\n     $notes = Notes::where('eleve_id', $eleve->id)->get();\n"
                },
                {
                    "date": 1731410766094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,8 @@\n     }\n \n     $classe = $eleve->classe;\n     $notes = Notes::where('eleve_id', $eleve->id)->get();\n-\n     return view('Eleves.Evaluations.listNotes', compact('notes', 'classe', 'eleve'));\n }\n \n     /**\n"
                },
                {
                    "date": 1731410773336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,14 +77,12 @@\n         return redirect()->route('eleves.dashboard')->withErrors('Aucune relation élève trouvée pour cet utilisateur.');\n     }\n \n     $eleve = $user->eleve;\n-\n     // Vérifier si l'élève est assigné à une classe\n     if (!$eleve->classe) {\n         return redirect()->back()->with('Vous n\\'êtes assigné à aucune classe. Veuillez contacter l\\'administrateur.');\n     }\n-\n     $classe = $eleve->classe;\n     $notes = Notes::where('eleve_id', $eleve->id)->get();\n     return view('Eleves.Evaluations.listNotes', compact('notes', 'classe', 'eleve'));\n }\n"
                },
                {
                    "date": 1731410847936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,26 +68,29 @@\n     //     return view('Eleves.Evaluations.listNotes', compact('notes','classe','eleve'));\n     // }\n \n     public function listNotes()\n-{\n-    $user = auth()->user();\n-\n-    // Vérifier si l'utilisateur est bien un élève\n-    if (!$user->eleve) {\n-        return redirect()->route('eleves.dashboard')->withErrors('Aucune relation élève trouvée pour cet utilisateur.');\n+    {\n+        $user = auth()->user();\n+    \n+        // Vérifier si l'utilisateur est bien un élève\n+        if (!$user->eleve) {\n+            return redirect()->route('eleves.dashboard')->withErrors('Aucune relation élève trouvée pour cet utilisateur.');\n+        }\n+    \n+        $eleve = $user->eleve;\n+    \n+        // Vérifier si l'élève est assigné à une classe\n+        if (!$eleve->classe) {\n+            return redirect()->route('eleves.dashboard')->with('error', 'Vous n\\'êtes assigné à aucune classe. Veuillez contacter l\\'administrateur.');\n+        }\n+    \n+        $classe = $eleve->classe;\n+        $notes = Notes::where('eleve_id', $eleve->id)->get();\n+        \n+        return view('Eleves.Evaluations.listNotes', compact('notes', 'classe', 'eleve'));\n     }\n-\n-    $eleve = $user->eleve;\n-    // Vérifier si l'élève est assigné à une classe\n-    if (!$eleve->classe) {\n-        return redirect()->back()->with('Vous n\\'êtes assigné à aucune classe. Veuillez contacter l\\'administrateur.');\n-    }\n-    $classe = $eleve->classe;\n-    $notes = Notes::where('eleve_id', $eleve->id)->get();\n-    return view('Eleves.Evaluations.listNotes', compact('notes', 'classe', 'eleve'));\n-}\n-\n+    \n     /**\n      * Show the form for creating a new resource.\n      *\n      * @return \\Illuminate\\Http\\Response\n"
                },
                {
                    "date": 1732371566278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,5 +167,24 @@\n     public function destroy(ElevesCours $elevesCours)\n     {\n         //\n     }\n+    public function download($id)\n+    {\n+        $cours = Cours::findOrFail($id);\n+    \n+        // Récupérez le chemin du fichier\n+        $filePath = storage_path('app/public/' . $cours->fichier_cours);\n+    \n+        // Récupérez le nom du fichier sans le chemin\n+        $fileName = basename($cours->fichier_cours);\n+    \n+        // Vérifiez si le fichier existe\n+        if (file_exists($filePath)) {\n+            // Téléchargez le fichier\n+            return response()->download($filePath, $fileName);\n+        } else {\n+            // Gérez l'erreur si le fichier n'existe pas\n+            abort(404, \"Le fichier du cours n'existe pas.\");\n+        }\n+    }\n }\n"
                },
                {
                    "date": 1732372676099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,9 @@\n     }\n     public function download($id)\n     {\n         $cours = Cours::findOrFail($id);\n+        dd(\"Méthode appelée avec l'ID : \" . $id);\n     \n         // Récupérez le chemin du fichier\n         $filePath = storage_path('app/public/' . $cours->fichier_cours);\n     \n"
                },
                {
                    "date": 1732372729349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,9 @@\n     }\n     public function download($id)\n     {\n         $cours = Cours::findOrFail($id);\n+\n         dd(\"Méthode appelée avec l'ID : \" . $id);\n     \n         // Récupérez le chemin du fichier\n         $filePath = storage_path('app/public/' . $cours->fichier_cours);\n"
                },
                {
                    "date": 1732373426303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,16 +170,16 @@\n     }\n     public function download($id)\n     {\n         $cours = Cours::findOrFail($id);\n-\n         dd(\"Méthode appelée avec l'ID : \" . $id);\n     \n         // Récupérez le chemin du fichier\n         $filePath = storage_path('app/public/' . $cours->fichier_cours);\n     \n         // Récupérez le nom du fichier sans le chemin\n         $fileName = basename($cours->fichier_cours);\n+        dd(\"Chemin du fichier : \" . $filePath, file_exists($filePath));\n     \n         // Vérifiez si le fichier existe\n         if (file_exists($filePath)) {\n             // Téléchargez le fichier\n"
                },
                {
                    "date": 1732373432359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,10 +177,10 @@\n         $filePath = storage_path('app/public/' . $cours->fichier_cours);\n     \n         // Récupérez le nom du fichier sans le chemin\n         $fileName = basename($cours->fichier_cours);\n+        \n         dd(\"Chemin du fichier : \" . $filePath, file_exists($filePath));\n-    \n         // Vérifiez si le fichier existe\n         if (file_exists($filePath)) {\n             // Téléchargez le fichier\n             return response()->download($filePath, $fileName);\n"
                },
                {
                    "date": 1732373462418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,19 +170,19 @@\n     }\n     public function download($id)\n     {\n         $cours = Cours::findOrFail($id);\n-        dd(\"Méthode appelée avec l'ID : \" . $id);\n+        // dd(\"Méthode appelée avec l'ID : \" . $id);\n     \n         // Récupérez le chemin du fichier\n         $filePath = storage_path('app/public/' . $cours->fichier_cours);\n     \n         // Récupérez le nom du fichier sans le chemin\n         $fileName = basename($cours->fichier_cours);\n         \n-        dd(\"Chemin du fichier : \" . $filePath, file_exists($filePath));\n         // Vérifiez si le fichier existe\n         if (file_exists($filePath)) {\n+            dd(\"Chemin du fichier : \" . $filePath, file_exists($filePath));\n             // Téléchargez le fichier\n             return response()->download($filePath, $fileName);\n         } else {\n             // Gérez l'erreur si le fichier n'existe pas\n"
                },
                {
                    "date": 1732373477669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,11 +180,11 @@\n         $fileName = basename($cours->fichier_cours);\n         \n         // Vérifiez si le fichier existe\n         if (file_exists($filePath)) {\n-            dd(\"Chemin du fichier : \" . $filePath, file_exists($filePath));\n             // Téléchargez le fichier\n             return response()->download($filePath, $fileName);\n+            dd(\"Chemin du fichier : \" . $filePath, file_exists($filePath));\n         } else {\n             // Gérez l'erreur si le fichier n'existe pas\n             abort(404, \"Le fichier du cours n'existe pas.\");\n         }\n"
                },
                {
                    "date": 1732373497360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,16 +175,16 @@\n     \n         // Récupérez le chemin du fichier\n         $filePath = storage_path('app/public/' . $cours->fichier_cours);\n     \n+        dd(\"Chemin du fichier : \" . $filePath, file_exists($filePath));\n         // Récupérez le nom du fichier sans le chemin\n         $fileName = basename($cours->fichier_cours);\n         \n         // Vérifiez si le fichier existe\n         if (file_exists($filePath)) {\n             // Téléchargez le fichier\n             return response()->download($filePath, $fileName);\n-            dd(\"Chemin du fichier : \" . $filePath, file_exists($filePath));\n         } else {\n             // Gérez l'erreur si le fichier n'existe pas\n             abort(404, \"Le fichier du cours n'existe pas.\");\n         }\n"
                },
                {
                    "date": 1732373552302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,23 +170,21 @@\n     }\n     public function download($id)\n     {\n         $cours = Cours::findOrFail($id);\n-        // dd(\"Méthode appelée avec l'ID : \" . $id);\n     \n-        // Récupérez le chemin du fichier\n+        // Récupérez le chemin complet du fichier\n         $filePath = storage_path('app/public/' . $cours->fichier_cours);\n     \n-        dd(\"Chemin du fichier : \" . $filePath, file_exists($filePath));\n-        // Récupérez le nom du fichier sans le chemin\n+        // Récupérez le nom du fichier\n         $fileName = basename($cours->fichier_cours);\n-        \n+    \n         // Vérifiez si le fichier existe\n-        if (file_exists($filePath)) {\n-            // Téléchargez le fichier\n-            return response()->download($filePath, $fileName);\n-        } else {\n-            // Gérez l'erreur si le fichier n'existe pas\n+        if (!file_exists($filePath)) {\n             abort(404, \"Le fichier du cours n'existe pas.\");\n         }\n+    \n+        // Téléchargez le fichier\n+        return response()->download($filePath, $fileName);\n     }\n+    \n }\n"
                },
                {
                    "date": 1732540272851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,6 +185,8 @@\n     \n         // Téléchargez le fichier\n         return response()->download($filePath, $fileName);\n     }\n+\n     \n+    \n }\n"
                },
                {
                    "date": 1732540313357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,6 +187,24 @@\n         return response()->download($filePath, $fileName);\n     }\n \n     \n+    public function download($id)\n+    {\n+        $emploiDuTemps = EmploisDuTemps::findOrFail($id);\n     \n+        // Récupérez le chemin du fichier\n+        $filePath = storage_path('app/public/' . $emploiDuTemps->emplois_du_temps);\n+    \n+        // Récupérez le nom du fichier sans le chemin\n+        $fileName = basename($emploiDuTemps->emplois_du_temps);\n+    \n+        // Vérifiez si le fichier existe\n+        if (file_exists($filePath)) {\n+            // Téléchargez le fichier\n+            return response()->download($filePath, $fileName);\n+        } else {\n+            // Gérez l'erreur si le fichier n'existe pas\n+            abort(404, \"Le fichier d'emploi du temps n'existe pas.\");\n+        }\n+    }\n }\n"
                },
                {
                    "date": 1732540338213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,9 @@\n         return response()->download($filePath, $fileName);\n     }\n \n     \n-    public function download($id)\n+    public function Edownload($id)\n     {\n         $emploiDuTemps = EmploisDuTemps::findOrFail($id);\n     \n         // Récupérez le chemin du fichier\n"
                },
                {
                    "date": 1732540344432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,9 @@\n         return response()->download($filePath, $fileName);\n     }\n \n     \n-    public function Edownload($id)\n+    public function Emploisdownload($id)\n     {\n         $emploiDuTemps = EmploisDuTemps::findOrFail($id);\n     \n         // Récupérez le chemin du fichier\n"
                },
                {
                    "date": 1732540633309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,6 +205,7 @@\n         } else {\n             // Gérez l'erreur si le fichier n'existe pas\n             abort(404, \"Le fichier d'emploi du temps n'existe pas.\");\n         }\n+        \n     }\n }\n"
                },
                {
                    "date": 1732540639933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,8 +204,8 @@\n             return response()->download($filePath, $fileName);\n         } else {\n             // Gérez l'erreur si le fichier n'existe pas\n             abort(404, \"Le fichier d'emploi du temps n'existe pas.\");\n-        }\n-        \n     }\n+\n+    }\n }\n"
                },
                {
                    "date": 1732540678215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n use App\\Models\\ElevesCours;\n use App\\Models\\Evaluations;\n use App\\Models\\Notes;\n use Illuminate\\Http\\Request;\n+use App\\Models\\EmploisDuTemps;\n \n class ElevesCoursController extends Controller\n {\n     /**\n"
                }
            ],
            "date": 1731407594830,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Cours;\nuse App\\Models\\Classe;\nuse App\\Models\\ElevesCours;\nuse App\\Models\\Evaluations;\nuse App\\Models\\Notes;\nuse Illuminate\\Http\\Request;\n\nclass ElevesCoursController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index()\n    {\n        $classes = Classe::all();\n        return view('Eleves.classes.index', compact('classes'));\n    }\n\n    public function listCours($id)\n    {\n        \n        $classe = Classe::findOrFail($id);\n        $cours = Cours::where('classe_id', $id)->get();\n        // $classe= $cours->classe->id;\n        return view('Eleves.classes.cours', compact('classe','cours'));\n    }\n\n\n    public function listEvaluations($classeId)\n    {\n        $classe = Classe::findOrFail($classeId);\n        $evaluations = Evaluations::where('classe_id', $classeId)->get();\n        return view('Eleves.Evaluations.listEvaluation', compact('classe', 'evaluations'));\n    }\n\n    \n    public function listNotes()\n    {\n        $user = auth()->user();\n    \n        if (!$user->eleve) {\n            return redirect()->route('eleves.dashboard')->withErrors('Aucune relation élève trouvée pour cet utilisateur.');\n        }\n    \n        $eleve = $user->eleve;\n        $classe = $eleve->classe;\n        $notes = Notes::where('eleve_id', $eleve->id)->get();\n    \n        return view('Eleves.Evaluations.listNotes', compact('notes','classe','eleve'));\n    }\n\n    \n    /**\n     * Show the form for creating a new resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create()\n    {\n        //\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        //\n    }\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  \\App\\Models\\ElevesCours  $elevesCours\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show($id)\n    {\n        $classe = Classe::findOrFail($id);\n        $eleve = auth()->user()->eleve;\n        \n        if ($eleve->classe_id !== $classe->id) {\n            return back()->withErrors(['error' => 'Vous n\\'êtes pas autorisé à accéder à cette classe.']);\n        }\n        return view('Eleves.classes.detail', compact('classe'));\n    }\n\n    public function detailCours($id)\n    {\n        $cours = Cours::findOrFail($id);\n        $classe= $cours->classe->id;\n        return view('Eleves.classes.detailCours', compact('cours'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     *\n     * @param  \\App\\Models\\ElevesCours  $elevesCours\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit(ElevesCours $elevesCours)\n    {\n        //\n    }\n\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\App\\Models\\ElevesCours  $elevesCours\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, ElevesCours $elevesCours)\n    {\n        //\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param  \\App\\Models\\ElevesCours  $elevesCours\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(ElevesCours $elevesCours)\n    {\n        //\n    }\n}\n"
        }
    ]
}