{
    "sourceFile": "app/Http/Controllers/ParentsController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1732473472184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732473627704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,8 +178,9 @@\n     {\n         $parent = Auth::user()->parent;\n         return view('Parents.profileEdit', compact('parent'));\n     }\n+    \n     public function updateProfile(UpdateParentProfileRequest $request,Parents $parent)\n     {\n \n         $user = Auth::user();\n"
                },
                {
                    "date": 1732473635535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,8 +124,9 @@\n         $emploiDuTemps = $eleve->classe->emploiDuTemps; \n \n         return view('Parents.emploi_du_temps', compact('eleve', 'emploiDuTemps'));\n     }\n+    \n     public function showNotes(Request $request)\n     {\n         $user = auth()->user();\n         if (!$user) {\n@@ -178,9 +179,9 @@\n     {\n         $parent = Auth::user()->parent;\n         return view('Parents.profileEdit', compact('parent'));\n     }\n-    \n+\n     public function updateProfile(UpdateParentProfileRequest $request,Parents $parent)\n     {\n \n         $user = Auth::user();\n"
                },
                {
                    "date": 1732473646034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,12 +124,12 @@\n         $emploiDuTemps = $eleve->classe->emploiDuTemps; \n \n         return view('Parents.emploi_du_temps', compact('eleve', 'emploiDuTemps'));\n     }\n-    \n+\n     public function showNotes(Request $request)\n     {\n-        $user = auth()->user();\n+        $user = auth()->user()->;\n         if (!$user) {\n             return redirect()->back()->with('error', 'Utilisateur non connecté.');\n         }\n     \n"
                },
                {
                    "date": 1732475202953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n     }\n \n     public function showNotes(Request $request)\n     {\n-        $user = auth()->user()->;\n+        $user = auth()->user()->parent;\n         if (!$user) {\n             return redirect()->back()->with('error', 'Utilisateur non connecté.');\n         }\n     \n@@ -138,8 +138,9 @@\n     \n         $eleve = Eleves::where('nom', $nomEleve)\n             ->where('email_tuteur', $parentEmail)\n             ->first();\n+            dd\n     \n         if (!$eleve) {\n             return redirect()->back()->with('error', 'Aucun élève trouvé avec ce nom pour ce parent.');\n         }\n"
                },
                {
                    "date": 1732475213321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n     \n         $eleve = Eleves::where('nom', $nomEleve)\n             ->where('email_tuteur', $parentEmail)\n             ->first();\n-            dd\n+            dd(  $eleve)\n     \n         if (!$eleve) {\n             return redirect()->back()->with('error', 'Aucun élève trouvé avec ce nom pour ce parent.');\n         }\n"
                },
                {
                    "date": 1732481061654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,33 +125,33 @@\n \n         return view('Parents.emploi_du_temps', compact('eleve', 'emploiDuTemps'));\n     }\n \n-    public function showNotes(Request $request)\n-    {\n-        $user = auth()->user()->parent;\n-        if (!$user) {\n-            return redirect()->back()->with('error', 'Utilisateur non connecté.');\n-        }\n+    // public function showNotes(Request $request)\n+    // {\n+    //     $user = auth()->user()->parent;\n+    //     if (!$user) {\n+    //         return redirect()->back()->with('error', 'Utilisateur non connecté.');\n+    //     }\n     \n-        $parentEmail = $user->email;\n-        $nomEleve = $request->input('non_de_votre_éléve');\n+    //     $parentEmail = $user->email;\n+    //     $nomEleve = $request->input('non_de_votre_éléve');\n     \n-        $eleve = Eleves::where('nom', $nomEleve)\n-            ->where('email_tuteur', $parentEmail)\n-            ->first();\n-            dd(  $eleve)\n+    //     $eleve = Eleves::where('nom', $nomEleve)\n+    //         ->where('email_tuteur', $parentEmail)\n+    //         ->first();\n+    //         dd($eleve);\n     \n-        if (!$eleve) {\n-            return redirect()->back()->with('error', 'Aucun élève trouvé avec ce nom pour ce parent.');\n-        }\n+    //     if (!$eleve) {\n+    //         return redirect()->back()->with('error', 'Aucun élève trouvé avec ce nom pour ce parent.');\n+    //     }\n     \n-        $notes = Notes::where('eleve_id', $eleve->id)->get();\n-        $classe = $eleve->classe;\n-        $emploiDuTemps = EmploisDuTemps::where('classe_id', $eleve->classe_id)->latest()->first();\n+    //     $notes = Notes::where('eleve_id', $eleve->id)->get();\n+    //     $classe = $eleve->classe;\n+    //     $emploiDuTemps = EmploisDuTemps::where('classe_id', $eleve->classe_id)->latest()->first();\n     \n-        return view('Parents.notes', compact('notes', 'emploiDuTemps', 'eleve','classe'));\n-    }\n+    //     return view('Parents.notes', compact('notes', 'emploiDuTemps', 'eleve','classe'));\n+    // }\n     \n     public function showBulletin($classeId, $eleveId)\n     {\n         $eleve = Eleves::with('notes.evaluation')->findOrFail($eleveId);\n"
                },
                {
                    "date": 1732481202345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,8 +151,40 @@\n     \n     //     return view('Parents.notes', compact('notes', 'emploiDuTemps', 'eleve','classe'));\n     // }\n     \n+\n+    public function showNotes(Request $request)\n+{\n+    // Vérifiez que l'utilisateur est bien un parent connecté\n+    $user = auth()->user()->parent;\n+    if (!$user) {\n+        return redirect()->back()->with('error', 'Utilisateur non connecté.');\n+    }\n+\n+    // Nettoyez les données saisies\n+    $parentEmail = trim($user->email);\n+    $nomEleve = trim($request->input('non_de_votre_éléve'));\n+    dd($nomEleve, $parentEmail);\n+    // Recherche insensible à la casse\n+    $eleve = Eleves::whereRaw('LOWER(nom) = ?', [strtolower($nomEleve)])\n+        ->whereRaw('LOWER(email_tuteur) = ?', [strtolower($parentEmail)])\n+        ->first();\n+\n+    // Vérifiez si l'élève existe\n+    if (!$eleve) {\n+        return redirect()->back()->with('error', 'Aucun élève trouvé avec ce nom pour ce parent.');\n+    }\n+\n+    // Récupérez les données nécessaires\n+    $notes = Notes::where('eleve_id', $eleve->id)->get();\n+    $classe = $eleve->classe;\n+    $emploiDuTemps = EmploisDuTemps::where('classe_id', $eleve->classe_id)->latest()->first();\n+\n+    // Retournez la vue avec les données\n+    return view('Parents.notes', compact('notes', 'emploiDuTemps', 'eleve', 'classe'));\n+}\n+\n     public function showBulletin($classeId, $eleveId)\n     {\n         $eleve = Eleves::with('notes.evaluation')->findOrFail($eleveId);\n         $classe = Classe::with('etablissement')->findOrFail($classeId);\n"
                }
            ],
            "date": 1732473472184,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Http\\Requests\\CompleterProfilParentRequest;\nuse App\\Http\\Requests\\UpdateParentProfileRequest;\nuse Log;\nuse App\\Models\\Notes;\nuse App\\Models\\Classe;\nuse App\\Models\\Eleves;\nuse App\\Models\\Parents;\nuse App\\Models\\Payment;\nuse Illuminate\\Http\\Request;\nuse App\\Models\\EmploisDuTemps;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Mail;\nuse Paydunya\\Setup as PaydunyaSetup;\nuse Paydunya\\Checkout\\CheckoutInvoice;\nuse Paydunya\\Checkout\\Store as PaydunyaStore;\n\nclass ParentsController extends Controller\n\n{\n    public function index()\n    {\n        $parent = Auth::user();\n        $eleve = $parent->eleve;\n    \n        $emploiDuTemps = null;\n    \n        if ($eleve) {\n            $emploiDuTemps = Classe::join('emplois_du_temps', 'classes.id', '=', 'emplois_du_temps.classe_id')\n                ->where('classes.id', $eleve->classe_id)\n                ->get(['emplois_du_temps.*']);\n        }\n        return view('Parents.parentsdashboard', compact('emploiDuTemps'));\n    }\n    \n    public function completerProfil()\n    {\n        return view('Parents.completerProfil');\n    }\n    public function store(CompleterProfilParentRequest $request)\n    {\n\n    $validated = $request->validated();\n        $user = Auth::user();\n        $parent = new Parents();\n        $parent->nom = $validated['nom'];\n        $parent->prenoms = $validated['prenoms'];\n        $parent->non_de_votre_éléve = $validated['non_de_votre_éléve'];\n        $parent->telephone = $validated['telephone'];\n        $parent->user_id = Auth::id(); \n        $parent->is_completed = true;\n        $parent->save();\n        return redirect()->route('parents.dashboard')->with('success', 'Profil complété avec succès.');\n    }\n\n\n\n\n    public function __construct()\n    {\n        $this->middleware(['auth', 'parent']);\n        PaydunyaSetup::setMasterKey(config('paydunya.master_key'));\n        PaydunyaSetup::setPublicKey(config('paydunya.public_key'));\n        PaydunyaSetup::setPrivateKey(config('paydunya.private_key'));\n        PaydunyaSetup::setMode(config('paydunya.mode'));\n        PaydunyaSetup::setToken(config('paydunya.token'));\n\n        // Configurer les informations de la boutique\n        PaydunyaStore::setName(\"SunuLycee\"); // Seul le nom est requis\n        PaydunyaStore::setTagline(\"Payer n'importe ou n'importe comment!\");\n        PaydunyaStore::setPhoneNumber(\"773611172\");\n        PaydunyaStore::setPostalAddress(\"Dakar, Sénégal\");\n        PaydunyaStore::setWebsiteUrl(\"http://127.0.0.1:8000\");\n    \n       \n        \n    }\n    public function redirectToPayment()\n    {\n        $eleve = Eleves::where('user_id', auth()->id())->firstOrFail();\n    \n    // Récupérer l'établissement associé à l'élève\n    $etablissement = $eleve->user->etablissement; \n\n    $co = new CheckoutInvoice();\n    \n    // Ajouter les détails de l'article à l'invoice\n    $co->addItem(\n        \"Frais de scolarité pour \" . $eleve->prenoms . \" \" . $eleve->nom,\n        \"Frais de scolarité pour l'établissement \" . $etablissement->nom,\n        1,\n        30000, \n        30000 \n    );\n\n    $co->setTotalAmount(30000); \n\n    // Créer la facture via PayDunya\n    if ($co->create()) {\n        Payment::create([\n            'montant' => 30000, \n            'statut' => 1, \n            'date' => now(),\n            'eleve_id' => $eleve->id\n        ]);\n\n        if (!empty($eleve->email_tuteur)) {\n            Mail::to($eleve->email_tuteur)->send(new \\App\\Mail\\PaymentReceived($eleve, 30000, $etablissement));\n        }\n        return redirect($co->getInvoiceUrl());\n    } else {\n        return response()->json(['error' => $co->response_text], 500);\n    }\n    }\n\n\n\n    public function showEmploiDuTemps($eleveId)\n    {\n        $eleve = Eleves::findOrFail($eleveId);\n        $emploiDuTemps = $eleve->classe->emploiDuTemps; \n\n        return view('Parents.emploi_du_temps', compact('eleve', 'emploiDuTemps'));\n    }\n    public function showNotes(Request $request)\n    {\n        $user = auth()->user();\n        if (!$user) {\n            return redirect()->back()->with('error', 'Utilisateur non connecté.');\n        }\n    \n        $parentEmail = $user->email;\n        $nomEleve = $request->input('non_de_votre_éléve');\n    \n        $eleve = Eleves::where('nom', $nomEleve)\n            ->where('email_tuteur', $parentEmail)\n            ->first();\n    \n        if (!$eleve) {\n            return redirect()->back()->with('error', 'Aucun élève trouvé avec ce nom pour ce parent.');\n        }\n    \n        $notes = Notes::where('eleve_id', $eleve->id)->get();\n        $classe = $eleve->classe;\n        $emploiDuTemps = EmploisDuTemps::where('classe_id', $eleve->classe_id)->latest()->first();\n    \n        return view('Parents.notes', compact('notes', 'emploiDuTemps', 'eleve','classe'));\n    }\n    \n    public function showBulletin($classeId, $eleveId)\n    {\n        $eleve = Eleves::with('notes.evaluation')->findOrFail($eleveId);\n        $classe = Classe::with('etablissement')->findOrFail($classeId);\n    \n        $totalNotes = 0;\n        $totalCoefficients = 0;\n    \n        foreach ($eleve->notes as $note) {\n            $totalNotes += $note->valeur * $note->coefficient;\n            $totalCoefficients += $note->coefficient;\n        }\n    \n        if ($totalCoefficients > 0) {\n            $moyenne = $totalNotes / $totalCoefficients;\n        } else {\n            $moyenne = 0;\n        }\n    \n        $etablissement = $classe->etablissement;\n    \n        return view('Parents.BultinEleves', compact('eleve', 'classe', 'etablissement', 'moyenne'));\n    }\n\n    public function editProfile(Parents $parent)\n    {\n        $parent = Auth::user()->parent;\n        return view('Parents.profileEdit', compact('parent'));\n    }\n    public function updateProfile(UpdateParentProfileRequest $request,Parents $parent)\n    {\n\n        $user = Auth::user();\n        $parent = $user->parent;\n        $data = $request->validated();\n        $parent->update($data);\n    return redirect()->route('parents.profile.edit')->with('success', 'Profil mis à jour avec succès');\n    }\n}\n"
        }
    ]
}